{
  "uuid": "",
  "lastMigration": 17,
  "name": "SendGrid Email Activity",
  "endpointPrefix": "v3",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "",
      "documentation": "Retrieve all recent access attempts",
      "method": "get",
      "endpoint": "access_settings/activity",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"result\": [\n    {\n      \"allowed\": {{faker 'random.boolean'}},\n      \"auth_method\": \"\",\n      \"first_at\": {{faker 'random.number'}},\n      \"ip\": \"\",\n      \"last_at\": {{faker 'random.number'}},\n      \"location\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Remove one or more IPs from the allow list",
      "method": "delete",
      "endpoint": "access_settings/whitelist",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve a list of currently allowed IPs",
      "method": "get",
      "endpoint": "access_settings/whitelist",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"result\": [\n    {\n      \"created_at\": 1441824715,\n      \"id\": 1,\n      \"ip\": \"192.168.1.1/32\",\n      \"updated_at\": 1441824715\n    },\n    {\n      \"created_at\": 1441824715,\n      \"id\": 2,\n      \"ip\": \"192.0.0.0/8\",\n      \"updated_at\": 1441824715\n    },\n    {\n      \"created_at\": 1441824715,\n      \"id\": 3,\n      \"ip\": \"192.168.1.3/32\",\n      \"updated_at\": 1441824715\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Add one or more IPs to the allow list",
      "method": "post",
      "endpoint": "access_settings/whitelist",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"result\": [\n    {\n      \"created_at\": 1441824715,\n      \"id\": 1,\n      \"ip\": \"192.168.1.1/32\",\n      \"updated_at\": 1441824715\n    },\n    {\n      \"created_at\": 1441824715,\n      \"id\": 2,\n      \"ip\": \"192.0.0.0/8\",\n      \"updated_at\": 1441824715\n    },\n    {\n      \"created_at\": 1441824715,\n      \"id\": 3,\n      \"ip\": \"192.168.1.3/32\",\n      \"updated_at\": 1441824715\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Remove a specific IP from the allowed list",
      "method": "delete",
      "endpoint": "access_settings/whitelist/:rule_id",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve a specific allowed IP",
      "method": "get",
      "endpoint": "access_settings/whitelist/:rule_id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"result\": [\n    {\n      \"created_at\": 1441824715,\n      \"id\": 1,\n      \"ip\": \"192.168.1.1/32\",\n      \"updated_at\": 1441824715\n    },\n    {\n      \"created_at\": 1441824715,\n      \"id\": 2,\n      \"ip\": \"192.0.0.0/8\",\n      \"updated_at\": 1441824715\n    },\n    {\n      \"created_at\": 1441824715,\n      \"id\": 3,\n      \"ip\": \"192.168.1.3/32\",\n      \"updated_at\": 1441824715\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve all alerts",
      "method": "get",
      "endpoint": "alerts",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  {\n    \"created_at\": {{faker 'random.number'}},\n    \"email_to\": \"\",\n    \"frequency\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"percentage\": {{faker 'random.number'}},\n    \"type\": \"{{oneOf (array 'usage_limit' 'stats_notification')}}\",\n    \"updated_at\": {{faker 'random.number'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Create a new Alert",
      "method": "post",
      "endpoint": "alerts",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created_at\": {{faker 'random.number'}},\n  \"email_to\": \"{{faker 'internet.email'}}\",\n  \"frequency\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"percentage\": {{faker 'random.number'}},\n  \"type\": \"\",\n  \"updated_at\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"field\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete an alert",
      "method": "delete",
      "endpoint": "alerts/:alert_id",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve a specific alert",
      "method": "get",
      "endpoint": "alerts/:alert_id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created_at\": {{faker 'random.number'}},\n  \"email_to\": \"\",\n  \"frequency\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"percentage\": {{faker 'random.number'}},\n  \"type\": \"{{oneOf (array 'usage_alert' 'stats_notification')}}\",\n  \"updated_at\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Update an alert",
      "method": "patch",
      "endpoint": "alerts/:alert_id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created_at\": {{faker 'random.number'}},\n  \"email_to\": \"\",\n  \"frequency\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"percentage\": {{faker 'random.number'}},\n  \"type\": \"{{oneOf (array 'usage_alert' 'stats_notification')}}\",\n  \"updated_at\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve all API Keys belonging to the authenticated user",
      "method": "get",
      "endpoint": "api_keys",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"result\": [\n    {\n      \"api_key_id\": \"qfTQ6KG0QBiwWdJ0-pCLCA\",\n      \"name\": \"Mail Send\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Create API keys",
      "method": "post",
      "endpoint": "api_keys",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"api_key\": \"\",\n  \"api_key_id\": \"\",\n  \"name\": \"\",\n  \"scopes\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete API keys",
      "method": "delete",
      "endpoint": "api_keys/:api_key_id",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve an existing API Key",
      "method": "get",
      "endpoint": "api_keys/:api_key_id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"result\": [\n    {\n      \"api_key_id\": \"qfTQ6KG0QBiwWdJ0-pCLCA\",\n      \"name\": \"Mail Send\",\n      \"scopes\": [\n        \"mail.send\",\n        \"mail.batch.create\",\n        \"mail.batch.read\",\n        \"mail.batch.update\",\n        \"mail.batch.delete\",\n        \"user.scheduled_sends.create\",\n        \"user.scheduled_sends.read\",\n        \"user.scheduled_sends.update\",\n        \"user.scheduled_sends.delete\",\n        \"sender_verification_eligible\",\n        \"sender_verification_legacy\",\n        \"2fa_required\"\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Update API key name",
      "method": "patch",
      "endpoint": "api_keys/:api_key_id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"api_key_id\": \"qfTQ6KG0QBiwWdJ0-pCLCA\",\n  \"name\": \"Mail Send\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Update API key name and scopes",
      "method": "put",
      "endpoint": "api_keys/:api_key_id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"api_key_id\": \"qfTQ6KG0QBiwWdJ0-pCLCA\",\n  \"name\": \"Mail Send\",\n  \"scopes\": [\n    \"mail.send\",\n    \"mail.batch.create\",\n    \"mail.batch.read\",\n    \"mail.batch.update\",\n    \"mail.batch.delete\",\n    \"user.scheduled_sends.create\",\n    \"user.scheduled_sends.read\",\n    \"user.scheduled_sends.update\",\n    \"user.scheduled_sends.delete\",\n    \"sender_verification_eligible\",\n    \"sender_verification_legacy\",\n    \"2fa_required\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve all suppression groups associated with the user.",
      "method": "get",
      "endpoint": "asm/groups",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  {\n    \"description\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_default\": {{faker 'random.boolean'}},\n    \"last_email_sent_at\": \"\",\n    \"name\": \"\",\n    \"unsubscribes\": {{faker 'random.number'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Create a new suppression group",
      "method": "post",
      "endpoint": "asm/groups",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"description\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"is_default\": {{faker 'random.boolean'}},\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete a Suppression Group",
      "method": "delete",
      "endpoint": "asm/groups/:group_id",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Get information on a single suppression group.",
      "method": "get",
      "endpoint": "asm/groups/:group_id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"description\": \"\",\n  \"is_default\": {{faker 'random.boolean'}},\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Update a suppression group.",
      "method": "patch",
      "endpoint": "asm/groups/:group_id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"description\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"is_default\": {{faker 'random.boolean'}},\n  \"last_email_sent_at\": \"\",\n  \"name\": \"\",\n  \"unsubscribes\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve all suppressions for a suppression group",
      "method": "get",
      "endpoint": "asm/groups/:group_id/suppressions",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  \"{{faker 'internet.email'}}\"\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Add suppressions to a suppression group",
      "method": "post",
      "endpoint": "asm/groups/:group_id/suppressions",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"recipient_emails\": [\n    \"{{faker 'internet.email'}}\"\n  ]\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Search for suppressions within a group",
      "method": "post",
      "endpoint": "asm/groups/:group_id/suppressions/search",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  \"{{faker 'internet.email'}}\"\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete a suppression from a suppression group",
      "method": "delete",
      "endpoint": "asm/groups/:group_id/suppressions/:email",
      "responses": [
        {
          "uuid": "",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve all suppressions",
      "method": "get",
      "endpoint": "asm/suppressions",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  {\n    \"created_at\": {{faker 'random.number'}},\n    \"email\": \"\",\n    \"group_id\": {{faker 'random.number'}},\n    \"group_name\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Add recipient addresses to the global suppression group.",
      "method": "post",
      "endpoint": "asm/suppressions/global",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"recipient_emails\": [\n    \"{{faker 'internet.email'}}\"\n  ]\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete a Global Suppression",
      "method": "delete",
      "endpoint": "asm/suppressions/global/:email",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve a Global Suppression",
      "method": "get",
      "endpoint": "asm/suppressions/global/:email",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"recipient_email\": \"{{faker 'internet.email'}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve all suppression groups for an email address",
      "method": "get",
      "endpoint": "asm/suppressions/:email",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"suppressions\": [\n    {\n      \"description\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_default\": {{faker 'random.boolean'}},\n      \"name\": \"\",\n      \"suppressed\": {{faker 'random.boolean'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve email statistics by browser.",
      "method": "get",
      "endpoint": "browsers/stats",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  {\n    \"date\": \"\",\n    \"stats\": [\n      {\n        \"metrics\": {\n          \"clicks\": {{faker 'random.number'}},\n          \"unique_clicks\": {{faker 'random.number'}}\n        },\n        \"name\": \"\",\n        \"type\": \"\"\n      }\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve all Campaigns",
      "method": "get",
      "endpoint": "campaigns",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"result\": [\n    {\n      \"categories\": [\n        \"\"\n      ],\n      \"custom_unsubscribe_url\": \"\",\n      \"editor\": \"{{oneOf (array 'code' 'design')}}\",\n      \"html_content\": \"\",\n      \"ip_pool\": \"\",\n      \"list_ids\": [\n        {{faker 'random.number'}}\n      ],\n      \"plain_content\": \"\",\n      \"segment_ids\": [\n        {{faker 'random.number'}}\n      ],\n      \"sender_id\": {{faker 'random.number'}},\n      \"subject\": \"\",\n      \"suppression_group_id\": {{faker 'random.number'}},\n      \"title\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Create a Campaign",
      "method": "post",
      "endpoint": "campaigns",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"categories\": [\n    \"\"\n  ],\n  \"custom_unsubscribe_url\": \"\",\n  \"editor\": \"{{oneOf (array 'code' 'design')}}\",\n  \"html_content\": \"\",\n  \"ip_pool\": \"\",\n  \"list_ids\": [\n    {{faker 'random.number'}}\n  ],\n  \"plain_content\": \"\",\n  \"segment_ids\": [\n    {{faker 'random.number'}}\n  ],\n  \"sender_id\": {{faker 'random.number'}},\n  \"subject\": \"\",\n  \"suppression_group_id\": {{faker 'random.number'}},\n  \"title\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "\"title\": \"title can't be blank\"\n\"title\": \"title is too long (maximum is 100 characters)\"\n\"categories\": \"categories exceeds 10 category limit\"\n\"html_content\": \"html_content exceeds the 1MB limit\"\n\"plain_content\": \"plain_content exceeds the 1MB limit\"\n\"sender_id\": \"sender_id does not exist\"\n\"sender_id\": \"sender_id is not a verified sender identity\"\n\"list_ids\": \"list_ids do not all exist\"\n\"segment_ids\": \"segment_ids do not all exist\"\n\"ip_pool\": \"The ip pool you provided is invalid\"\n\"suppression_group_id\": \"suppression_group_id does not exist\"\n\"unsubscribes\": \"Either suppression_group_id or custom_unsubscribe_url may be set/used, but not both. Please remove one before setting the other.\"\n\"\": \"The JSON you have submitted cannot be parsed.\"\n\"\": \"You've reached your limit of 250 campaigns. Please delete one or more and try again.\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete a Campaign",
      "method": "delete",
      "endpoint": "campaigns/:campaign_id",
      "responses": [
        {
          "uuid": "",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 404,
          "label": "\"\": \"not found\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve a single campaign",
      "method": "get",
      "endpoint": "campaigns/:campaign_id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"categories\": [\n    \"\"\n  ],\n  \"custom_unsubscribe_url\": \"\",\n  \"html_content\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"ip_pool\": \"\",\n  \"list_ids\": [\n    {{faker 'random.number'}}\n  ],\n  \"plain_content\": \"\",\n  \"segment_ids\": [\n    {{faker 'random.number'}}\n  ],\n  \"sender_id\": {{faker 'random.number'}},\n  \"status\": \"\",\n  \"subject\": \"\",\n  \"suppression_group_id\": {{faker 'random.number'}},\n  \"title\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 404,
          "label": "\"\": \"not found\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Update a Campaign",
      "method": "patch",
      "endpoint": "campaigns/:campaign_id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"categories\": [\n    \"\"\n  ],\n  \"custom_unsubscribe_url\": \"\",\n  \"editor\": \"{{oneOf (array 'code' 'design')}}\",\n  \"html_content\": \"\",\n  \"ip_pool\": \"\",\n  \"list_ids\": [\n    {{faker 'random.number'}}\n  ],\n  \"plain_content\": \"\",\n  \"segment_ids\": [\n    {{faker 'random.number'}}\n  ],\n  \"sender_id\": {{faker 'random.number'}},\n  \"subject\": \"\",\n  \"suppression_group_id\": {{faker 'random.number'}},\n  \"title\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 400,
          "label": "\"title\": \"title can't be blank\"\n\"title\": \"title is too long (maximum is 100 characters)\"\n\"categories\": \"categories exceeds 10 category limit\"\n\"html_content\": \"html_content exceeds the 1MB limit\"\n\"plain_content\": \"plain_content exceeds the 1MB limit\"\n\"sender_id\": \"sender_id does not exist\"\n\"sender_id\": \"sender_id is not a verified sender identity\"\n\"list_ids\": \"list_ids do not all exist\"\n\"segment_ids\": \"segment_ids do not all exist\"\n\"ip_pool\": \"The ip pool you provided is invalid\"\n\"suppression_group_id\": \"suppression_group_id does not exist\"\n\"unsubscribes\": \"Either suppression_group_id or custom_unsubscribe_url may be set/used, but not both. Please remove one before setting the other.\"\n\"\": \"The JSON you have submitted cannot be parsed.\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 403,
          "label": "\"\": \"You may only update a campaign when it is in draft mode.\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "\"\": \"not found\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Unschedule a Scheduled Campaign",
      "method": "delete",
      "endpoint": "campaigns/:campaign_id/schedules",
      "responses": [
        {
          "uuid": "",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "\"\": \"This campaign is already In Progress.\"\n\"\": \"This campaign is already Sent.\"\n\"\": \"This campaign is already Paused.\"\n\"\": \"This campaign is already Canceled.\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "\"\": \"not found\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "View Scheduled Time of a Campaign",
      "method": "get",
      "endpoint": "campaigns/:campaign_id/schedules",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"send_at\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "\"\": \"not found\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Update a Scheduled Campaign",
      "method": "patch",
      "endpoint": "campaigns/:campaign_id/schedules",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"send_at\": {{faker 'random.number'}},\n  \"status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "\"\": \"The JSON you have submitted cannot be parsed.\"\n\"send_at\": \"Please choose a future time for sending your campaign.\"\n\"\":\"You do not have enough credits to send this campaign. Upgrade your plan to send more: https://app.sendgrid.com/settings/billing\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "\"send_at\": \"You cannot update the send_at value of non-scheduled campaign.\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "\"\": \"not found\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Schedule a Campaign",
      "method": "post",
      "endpoint": "campaigns/:campaign_id/schedules",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"send_at\": {{faker 'random.number'}},\n  \"status\": \"{{oneOf (array 'Scheduled')}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "\"subject\": \"subject can't be blank\"\n\"sender_id\": \"sender_id can't be blank\"\n\"plain_content\": \"plain_content can't be blank, please provide plain text or html content\"\n\"list_ids\": \"You must select at least 1 segment or 1 list to send to.\"\n\"send_at\": \"Please choose a future time for sending your campaign.\"\n\"unsubscribe_tag\": \"An [unsubscribe] tag in both your html and plain content is required to send a campaign.\"\n\"suppression_group_id\": \"Either a suppression_group_id or custom_unsubscribe_url is required to send a campaign.\"\n\"\": \"The JSON you have submitted cannot be parsed.\"\n\"\":\"You do not have enough credits to send this campaign. Upgrade your plan to send more: https://app.sendgrid.com/settings/billing\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "\"\": \"You cannot POST to a campaign that has already sent or scheduled. However you can update a scheduled campaign with a PATCH.\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "\"\": \"not found\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Send a Campaign",
      "method": "post",
      "endpoint": "campaigns/:campaign_id/schedules/now",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"status\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "\"subject\": \"subject can't be blank\"\n\"sender_id\": \"sender_id can't be blank\"\n\"plain_content\": \"plain_content can't be blank, please provide plain text or html content\"\n\"list_ids\": \"You must select at least 1 segment or 1 list to send to.\"\n\"unsubscribe_tag\": \"An [unsubscribe] tag in both your html and plain content is required to send a campaign.\"\n\"suppression_group_id\": \"Either a suppression_group_id or custom_unsubscribe_url is required to send a campaign.\"\n\"\": \"You do not have enough credits to send this campaign. Upgrade your plan to send more: https://app.sendgrid.com/settings/billing\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "\"\": \"You may only send a campaign when it is in draft mode.\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "\"\": \"not found\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Send a Test Campaign",
      "method": "post",
      "endpoint": "campaigns/:campaign_id/schedules/test",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"to\": \"\"\n}",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "\"\": \"The JSON you have submitted cannot be parsed.\"\n\"to\": \"Please provide an email address to which the test should be sent.\"\n\"to\": \"You can only send tests to 10 addresses at a time.\"\n\"subject\": \"Please add a subject to your campaign before sending a test.\"\n\"plain_content\": \"Plain content and html content can't both be blank. Please set one of these values before sending a test.\"\n\"sender_id\": \"Please assign a sender identity to your campaign before sending a test.\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "\"\": \"not found\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve all categories",
      "method": "get",
      "endpoint": "categories",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  {\n    \"category\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve Email Statistics for Categories",
      "method": "get",
      "endpoint": "categories/stats",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  {\n    \"date\": \"2015-01-01T00:00:00.000Z\",\n    \"stats\": [\n      {\n        \"metrics\": {\n          \"blocks\": 0,\n          \"bounce_drops\": 0,\n          \"bounces\": 0,\n          \"clicks\": 0,\n          \"deferred\": 0,\n          \"delivered\": 0,\n          \"invalid_emails\": 0,\n          \"opens\": 0,\n          \"processed\": 0,\n          \"requests\": 0,\n          \"spam_report_drops\": 0,\n          \"spam_reports\": 0,\n          \"unique_clicks\": 0,\n          \"unique_opens\": 0,\n          \"unsubscribe_drops\": 0,\n          \"unsubscribes\": 0\n        },\n        \"name\": \"cat1\",\n        \"type\": \"category\"\n      },\n      {\n        \"metrics\": {\n          \"blocks\": 0,\n          \"bounce_drops\": 0,\n          \"bounces\": 0,\n          \"clicks\": 0,\n          \"deferred\": 0,\n          \"delivered\": 0,\n          \"invalid_emails\": 0,\n          \"opens\": 0,\n          \"processed\": 0,\n          \"requests\": 0,\n          \"spam_report_drops\": 0,\n          \"spam_reports\": 0,\n          \"unique_clicks\": 0,\n          \"unique_opens\": 0,\n          \"unsubscribe_drops\": 0,\n          \"unsubscribes\": 0\n        },\n        \"name\": \"cat2\",\n        \"type\": \"category\"\n      }\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve sums of email stats for each category [Needs: Stats object defined, has category ID?]",
      "method": "get",
      "endpoint": "categories/stats/sums",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"date\": \"2015-01-01T00:00:00.000Z\",\n  \"stats\": [\n    {\n      \"metrics\": {\n        \"blocks\": 0,\n        \"bounce_drops\": 0,\n        \"bounces\": 0,\n        \"clicks\": 0,\n        \"deferred\": 0,\n        \"delivered\": 0,\n        \"invalid_emails\": 0,\n        \"opens\": 0,\n        \"processed\": 0,\n        \"requests\": 0,\n        \"spam_report_drops\": 0,\n        \"spam_reports\": 0,\n        \"unique_clicks\": 0,\n        \"unique_opens\": 0,\n        \"unsubscribe_drops\": 0,\n        \"unsubscribes\": 0\n      },\n      \"name\": \"cat1\",\n      \"type\": \"category\"\n    },\n    {\n      \"metrics\": {\n        \"blocks\": 0,\n        \"bounce_drops\": 0,\n        \"bounces\": 0,\n        \"clicks\": 0,\n        \"deferred\": 0,\n        \"delivered\": 0,\n        \"invalid_emails\": 0,\n        \"opens\": 0,\n        \"processed\": 0,\n        \"requests\": 0,\n        \"spam_report_drops\": 0,\n        \"spam_reports\": 0,\n        \"unique_clicks\": 0,\n        \"unique_opens\": 0,\n        \"unsubscribe_drops\": 0,\n        \"unsubscribes\": 0\n      },\n      \"name\": \"cat2\",\n      \"type\": \"category\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve email statistics by client type.",
      "method": "get",
      "endpoint": "clients/stats",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  {\n    \"date\": \"\",\n    \"stats\": [\n      {\n        \"metrics\": {\n          \"opens\": {{faker 'random.number'}},\n          \"unique_opens\": {{faker 'random.number'}}\n        },\n        \"name\": \"\",\n        \"type\": \"\"\n      }\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve stats by a specific client type.",
      "method": "get",
      "endpoint": "clients/:client_type/stats",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  {\n    \"date\": \"\",\n    \"stats\": [\n      {\n        \"metrics\": {\n          \"opens\": {{faker 'random.number'}},\n          \"unique_opens\": {{faker 'random.number'}}\n        },\n        \"name\": \"\",\n        \"type\": \"\"\n      }\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve all custom fields",
      "method": "get",
      "endpoint": "contactdb/custom_fields",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"custom_fields\": [\n    {\n      \"name\": \"\",\n      \"type\": \"{{oneOf (array 'date' 'text' 'number')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Create a Custom Field",
      "method": "post",
      "endpoint": "contactdb/custom_fields",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"name\": \"\",\n  \"type\": \"{{oneOf (array 'date' 'text' 'number')}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "\"\" : \"Returned if request body is invalid JSON\"\n\"type\" : \"Returned if custom field type is invalid or not provided\"\n\"name\" : \"Returned if custom field name is not provided\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete a Custom Field",
      "method": "delete",
      "endpoint": "contactdb/custom_fields/:custom_field_id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "\"id\" : \"Returned if custom_field_id is not valid\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "\"custom_field_id\" : \"Returned if custom_field_id does not exist\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve a Custom Field",
      "method": "get",
      "endpoint": "contactdb/custom_fields/:custom_field_id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"name\": \"\",\n  \"type\": \"{{oneOf (array 'date' 'text' 'number')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "\"custom_field_id\" : \"Returned if custom_field_id does not exist\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete Multiple lists",
      "method": "delete",
      "endpoint": "contactdb/lists",
      "responses": [
        {
          "uuid": "",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "\"id\" : \"Returned if all list ids are not valid\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve all lists",
      "method": "get",
      "endpoint": "contactdb/lists",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"lists\": [\n    {\n      \"id\": 1,\n      \"name\": \"listname\",\n      \"recipient_count\": 0\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Create a List",
      "method": "post",
      "endpoint": "contactdb/lists",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"id\": 1,\n  \"name\": \"listname\",\n  \"recipient_count\": 0\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "\"name\" : \"Returned if list name is a duplicate of an existing list or segment\"\n\"name\" : \"Returned if list name is not a string\"\n\"\" : \"Returned if request body is invalid JSON\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete a List",
      "method": "delete",
      "endpoint": "contactdb/lists/:list_id",
      "responses": [
        {
          "uuid": "",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 202,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "\"list_id\" : \"Returned if list_id is not valid\"\n\"delete_contacts\" : \"Returned if delete_contacts is not valid\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "\"list_id\" : \"Returned if list_id does not exist\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve a single list",
      "method": "get",
      "endpoint": "contactdb/lists/:list_id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"id\": 1,\n  \"name\": \"listname\",\n  \"recipient_count\": 0\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "\"list_id\" : \"Returned if list_id is not valid\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "\"list_id\" : \"Returned if list_id does not exist\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Update a List",
      "method": "patch",
      "endpoint": "contactdb/lists/:list_id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"recipient_count\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "\"name\" : \"Returned if list name is a duplicate of existing list or segment\"\n\"name\" : \"Returned if list name is invalid or not provided\"\n\"list_id\" : \"Returned if list_id is not valid\"\n\"\" : \"Returned if request body is invalid JSON\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "\"list_id\" : \"Returned if list_id does not exist\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve all recipients on a List",
      "method": "get",
      "endpoint": "contactdb/lists/:list_id/recipients",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"recipients\": [\n    {\n      \"recipients\": [\n        {\n          \"created_at\": {{faker 'random.number'}},\n          \"custom_fields\": [\n            \"\"\n          ],\n          \"email\": \"{{faker 'internet.email'}}\",\n          \"first_name\": \"\",\n          \"id\": \"\",\n          \"last_clicked\": {{faker 'random.number'}},\n          \"last_emailed\": {{faker 'random.number'}},\n          \"last_name\": \"\",\n          \"last_opened\": {{faker 'random.number'}},\n          \"updated_at\": {{faker 'random.number'}}\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "\"list_id\" : \"Returned if list_id is not a valid integer\"\n\"page\" : \"Returned if page is not a valid integer\"\n\"page\" : \"Returned if page is less than 1\"\n\"page_size\" : \"Returned if page_size is not a valid integer\"\n\"page_size\" : \"Returned if page_size is less than 1 or greater than 1000\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 404,
          "label": "\"list_id\" : \"Returned if list_id does not exist\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Add Multiple Recipients to a List",
      "method": "post",
      "endpoint": "contactdb/lists/:list_id/recipients",
      "responses": [
        {
          "uuid": "",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "\"list_id\" : \"Returned if list_id is not a valid integer\"\n\"\" : \"Returned if no valid recipient ids were passed\"\n\"\" : \"Returned if no recipients were added\"\n\"\" : \"Returned if request body is invalid JSON\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "\"list_id\": \"Returned if list_id does not exist\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete a Single Recipient from a Single List",
      "method": "delete",
      "endpoint": "contactdb/lists/:list_id/recipients/:recipient_id",
      "responses": [
        {
          "uuid": "",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "\"list_id\" : \"Returned if list_id is not valid\"\n\"recipient_id\" : \"Returned if recipient_id is not valid\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "\"list_id\" : \"Returned if list_id does not exist\"\n\"recipient_id\" : \"Returned if recipient_id does not exist\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Add a Single Recipient to a List",
      "method": "post",
      "endpoint": "contactdb/lists/:list_id/recipients/:recipient_id",
      "responses": [
        {
          "uuid": "",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "\"list_id\" : \"Returned if list_id is invalid\"\n\"recipient_id\" : \"Returned if recipient_id is invalid\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "\"list_id\" : \"Returned if list_id does not exist\"\n\"recipient_id\" : \"Returned if recipient_id does not exist\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete Recipients",
      "method": "delete",
      "endpoint": "contactdb/recipients",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "\"\" : \"Returned if no recipients are deleted\"\n\"\" : \"Returned if all of the provided recipient ids are invalid\"\n\"\" : \"Returned if request body is not valid json\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve recipients",
      "method": "get",
      "endpoint": "contactdb/recipients",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"recipients\": [\n    {}\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 400,
          "label": "\"page\" : \"Returned if page is not a valid integer\"\n\"page\" : \"Returned if page is less than 1\"\n\"page_size\" : \"Returned if page_size is not a valid integer\"\n\"page_size\" : \"Returned if page_size is less than 1 or greater than 1000\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Update Recipient",
      "method": "patch",
      "endpoint": "contactdb/recipients",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"error_count\": 1,\n  \"error_indices\": [\n    2\n  ],\n  \"errors\": [\n    {\n      \"error_indices\": [\n        2\n      ],\n      \"message\": \"Invalid email.\"\n    }\n  ],\n  \"new_count\": 2,\n  \"persisted_recipients\": [\n    \"YUBh\",\n    \"bWlsbGVyQG1pbGxlci50ZXN0\"\n  ],\n  \"updated_count\": 0\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "\"\" : \"Returned if request body is not valid json\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Add recipients",
      "method": "post",
      "endpoint": "contactdb/recipients",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"error_count\": 1,\n  \"error_indices\": [\n    2\n  ],\n  \"errors\": [\n    {\n      \"error_indices\": [\n        2\n      ],\n      \"message\": \"Invalid email.\"\n    }\n  ],\n  \"new_count\": 2,\n  \"persisted_recipients\": [\n    \"YUBh\",\n    \"bWlsbGVyQG1pbGxlci50ZXN0\"\n  ],\n  \"updated_count\": 0\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "\"\" : \"Returned if request body is not valid json\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve the count of billable recipients",
      "method": "get",
      "endpoint": "contactdb/recipients/billable_count",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"recipient_count\": 1234\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve a Count of Recipients",
      "method": "get",
      "endpoint": "contactdb/recipients/count",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"recipient_count\": 1234\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Search recipients",
      "method": "get",
      "endpoint": "contactdb/recipients/search",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"recipients\": [\n    {\n      \"recipients\": [\n        {\n          \"created_at\": {{faker 'random.number'}},\n          \"custom_fields\": [\n            \"\"\n          ],\n          \"email\": \"{{faker 'internet.email'}}\",\n          \"first_name\": \"\",\n          \"id\": \"\",\n          \"last_clicked\": {{faker 'random.number'}},\n          \"last_emailed\": {{faker 'random.number'}},\n          \"last_name\": \"\",\n          \"last_opened\": {{faker 'random.number'}},\n          \"updated_at\": {{faker 'random.number'}}\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "\"\" : \"Returned if no search params are specified\"\n\"field\" : \"Returned if the provided field is invalid or does not exist\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Search recipients",
      "method": "post",
      "endpoint": "contactdb/recipients/search",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"recipient_count\": {{faker 'random.number'}},\n  \"recipients\": [\n    {\n      \"created_at\": {{faker 'random.number'}},\n      \"custom_fields\": [\n        {\n          \"id\": {{faker 'random.number'}},\n          \"name\": \"\",\n          \"type\": \"\",\n          \"value\": {{faker 'random.number'}}\n        }\n      ],\n      \"email\": \"\",\n      \"first_name\": \"\",\n      \"id\": \"\",\n      \"last_clicked\": {{faker 'random.number'}},\n      \"last_emailed\": {{faker 'random.number'}},\n      \"last_opened\": {{faker 'random.number'}},\n      \"updated_at\": {{faker 'random.number'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete a Recipient",
      "method": "delete",
      "endpoint": "contactdb/recipients/:recipient_id",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "\"recipient_id\" : \"Returned if recipient_id is not valid\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "\"recipient_id\" : \"Returned if record for recipient id does not exist\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve a single recipient",
      "method": "get",
      "endpoint": "contactdb/recipients/:recipient_id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"recipients\": [\n    {\n      \"created_at\": {{faker 'random.number'}},\n      \"custom_fields\": [\n        \"\"\n      ],\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"first_name\": \"\",\n      \"id\": \"\",\n      \"last_clicked\": {{faker 'random.number'}},\n      \"last_emailed\": {{faker 'random.number'}},\n      \"last_name\": \"\",\n      \"last_opened\": {{faker 'random.number'}},\n      \"updated_at\": {{faker 'random.number'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 400,
          "label": "\"recipient_id\" : \"Returned if recipient_id is not valid\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 404,
          "label": "\"recipient_id\" : \"Returned if record for recipient id does not exist\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve the lists that a recipient is on",
      "method": "get",
      "endpoint": "contactdb/recipients/:recipient_id/lists",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"lists\": [\n    {\n      \"id\": 1,\n      \"name\": \"listname\",\n      \"recipient_count\": 0\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "\"recipient_id\" : \"Returned if recipient_id is not valid\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "\"recipient_id\" : \"Returned if record for the recipient id does not exist\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve reserved fields",
      "method": "get",
      "endpoint": "contactdb/reserved_fields",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"reserved_fields\": [\n    {\n      \"name\": \"\",\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve all segments",
      "method": "get",
      "endpoint": "contactdb/segments",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"segments\": [\n    {\n      \"conditions\": [\n        {\n          \"and_or\": \"\",\n          \"field\": \"last_name\",\n          \"operator\": \"eq\",\n          \"value\": \"Miller\"\n        },\n        {\n          \"and_or\": \"and\",\n          \"field\": \"last_clicked\",\n          \"operator\": \"gt\",\n          \"value\": \"01/02/2015\"\n        },\n        {\n          \"and_or\": \"or\",\n          \"field\": \"clicks.campaign_identifier\",\n          \"operator\": \"eq\",\n          \"value\": \"513\"\n        }\n      ],\n      \"list_id\": 4,\n      \"name\": \"Last Name Miller\",\n      \"recipient_count\": 1234\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Create a Segment",
      "method": "post",
      "endpoint": "contactdb/segments",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"id\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "\"name\" : \"Returned if the name is not valid\"\n\"list_id\" : \"Returned if the list_id is not valid\"\n\"and_or\" : \"Returned if and_or and set value is not passed into the request body\"\n\"and_or\" : \"Returned if and_or is set on the only condition passed\"\n\"and_or\" : \"Returned if and_or is set on all conditions\"\n\"and_or\" : \"Returned if and_or is not set on more than one condition and less than all conditions\"\n\"operator\" : \"Returned if operator and set value is not passed into the request body\"\n\"value\" : \"Returned if value and set value is not passed into the request body\"\n\"field\" : \"Returned if field and set value is not passed into the request body\"\n\"\" : \"Returned if request body is not valid json\"\n\"\" : \"Returned if invalid value is passed into one of the request body parameters\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete a segment",
      "method": "delete",
      "endpoint": "contactdb/segments/:segment_id",
      "responses": [
        {
          "uuid": "",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "\"segment_id\" : \"Returned if segment_id is not valid\"\n\"delete_contacts\" : \"Returned if delete_contacts is not a valid boolean\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "\"segment_id\" : \"Returned if segment_id does not exist\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve a segment",
      "method": "get",
      "endpoint": "contactdb/segments/:segment_id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"conditions\": [\n    {\n      \"and_or\": \"\",\n      \"field\": \"last_name\",\n      \"operator\": \"eq\",\n      \"value\": \"Miller\"\n    },\n    {\n      \"and_or\": \"and\",\n      \"field\": \"last_clicked\",\n      \"operator\": \"gt\",\n      \"value\": \"01/02/2015\"\n    },\n    {\n      \"and_or\": \"or\",\n      \"field\": \"clicks.campaign_identifier\",\n      \"operator\": \"eq\",\n      \"value\": \"513\"\n    }\n  ],\n  \"list_id\": 4,\n  \"name\": \"Last Name Miller\",\n  \"recipient_count\": 1234\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "\"segment_id\" : \"Returned if segment_id is not valid\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "\"segment_id\" : \"Returned if segment_id does not exist\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Update a segment",
      "method": "patch",
      "endpoint": "contactdb/segments/:segment_id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"conditions\": [\n    {\n      \"and_or\": \"\",\n      \"field\": \"last_name\",\n      \"operator\": \"eq\",\n      \"value\": \"Miller\"\n    },\n    {\n      \"and_or\": \"and\",\n      \"field\": \"last_clicked\",\n      \"operator\": \"gt\",\n      \"value\": \"01/02/2015\"\n    },\n    {\n      \"and_or\": \"or\",\n      \"field\": \"clicks.campaign_identifier\",\n      \"operator\": \"eq\",\n      \"value\": \"513\"\n    }\n  ],\n  \"list_id\": 4,\n  \"name\": \"Last Name Miller\",\n  \"recipient_count\": 1234\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve recipients on a segment",
      "method": "get",
      "endpoint": "contactdb/segments/:segment_id/recipients",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"recipients\": [\n    {\n      \"recipients\": [\n        {\n          \"created_at\": {{faker 'random.number'}},\n          \"custom_fields\": [\n            \"\"\n          ],\n          \"email\": \"{{faker 'internet.email'}}\",\n          \"first_name\": \"\",\n          \"id\": \"\",\n          \"last_clicked\": {{faker 'random.number'}},\n          \"last_emailed\": {{faker 'random.number'}},\n          \"last_name\": \"\",\n          \"last_opened\": {{faker 'random.number'}},\n          \"updated_at\": {{faker 'random.number'}}\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 400,
          "label": "\"page\" : \"Returned if page is not a valid integer\"\n\"page\" : \"Returned if page is less than 1\"\n\"page_size\" : \"Returned if page_size is not a valid integer\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 404,
          "label": "\"segment_id\" : \"Returned if segment_id is not valid\"\n\"segment_id\" : \"Returned if segment_id does not exist\"",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Get Recipient Upload Status",
      "method": "get",
      "endpoint": "contactdb/status",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"status\": [\n    {\n      \"\": \"\",\n      \"id\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "List Designs",
      "method": "get",
      "endpoint": "designs",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"_metadata\": {\n    \"count\": {{faker 'random.number'}},\n    \"next\": \"\",\n    \"prev\": \"\",\n    \"self\": \"\"\n  },\n  \"result\": [\n    {\n      \"_metadata\": {\n        \"count\": 3,\n        \"self\": \"https://api.sendgrid.com/v3/designs?page_token=vHdvHCg0w1F-TmWJcPNpTEnFY2aPEmRBHONwOgZ6TgJbX2_I\"\n      },\n      \"result\": [\n        {\n          \"categories\": [\n            \"welcome\",\n            \"new customer\"\n          ],\n          \"created_at\": \"2021-04-09T17:29:46.000Z\",\n          \"editor\": \"code\",\n          \"generate_plain_content\": true,\n          \"id\": \"3247eaea-c912-42a3-b0bc-60bdaf210396\",\n          \"name\": \"Welcome Email\",\n          \"subject\": \"Welcom to the Cake or Pie Cafe\",\n          \"thumbnail_url\": \"//us-east-2-production-thumbnail-bucket.s3.amazonaws.com/llny8o5b3m636z92p7hbjnmq1jvpka39p370jwtin2s1wxv7x1sgm0y5fk518d0s.png\",\n          \"updated_at\": \"2021-04-09T17:29:55.000Z\"\n        },\n        {\n          \"categories\": [\n            \"promo\",\n            \"coupon\"\n          ],\n          \"created_at\": \"2021-04-09T17:29:21.000Z\",\n          \"editor\": \"design\",\n          \"generate_plain_content\": true,\n          \"id\": \"02dfd792-f31f-439a-a79e-5c47fbcfdbac\",\n          \"name\": \"Monthly Promo\",\n          \"subject\": \"Free Dozen Cupcakes\",\n          \"thumbnail_url\": \"//us-east-2-production-thumbnail-bucket.s3.amazonaws.com/hfyxahd7ues2ajuoeoqq2xe6ibdasl1q89ox0y9ncya2ftpoicssmtf9ddus4c39.png\",\n          \"updated_at\": \"2021-04-09T17:29:42.000Z\"\n        },\n        {\n          \"categories\": [],\n          \"created_at\": \"2020-10-09T17:33:46.000Z\",\n          \"editor\": \"design\",\n          \"generate_plain_content\": true,\n          \"id\": \"e54be823-19ef-4c6f-8b60-efd7514f492d\",\n          \"name\": \"Duplicate: Ingrid & Anders\",\n          \"subject\": \"Welcome to Ingrid & Anders!\",\n          \"thumbnail_url\": \"//us-east-2-production-thumbnail-bucket.s3.amazonaws.com/12kni9gjpyb9uxmwr9vk7unycjr70u95zoyhe9sg2zounul2zg7dih1s20k13q2z.png\",\n          \"updated_at\": \"2021-04-07T19:57:52.000Z\"\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Create Design",
      "method": "post",
      "endpoint": "designs",
      "responses": [
        {
          "uuid": "",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "List SendGrid Pre-built Designs",
      "method": "get",
      "endpoint": "designs/pre-builts",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"_metadata\": {\n    \"count\": {{faker 'random.number'}},\n    \"next\": \"\",\n    \"prev\": \"\",\n    \"self\": \"\"\n  },\n  \"result\": [\n    {\n      \"_metadata\": {\n        \"count\": 3,\n        \"self\": \"https://api.sendgrid.com/v3/designs?page_token=vHdvHCg0w1F-TmWJcPNpTEnFY2aPEmRBHONwOgZ6TgJbX2_I\"\n      },\n      \"result\": [\n        {\n          \"categories\": [\n            \"welcome\",\n            \"new customer\"\n          ],\n          \"created_at\": \"2021-04-09T17:29:46.000Z\",\n          \"editor\": \"code\",\n          \"generate_plain_content\": true,\n          \"id\": \"3247eaea-c912-42a3-b0bc-60bdaf210396\",\n          \"name\": \"Welcome Email\",\n          \"subject\": \"Welcom to the Cake or Pie Cafe\",\n          \"thumbnail_url\": \"//us-east-2-production-thumbnail-bucket.s3.amazonaws.com/llny8o5b3m636z92p7hbjnmq1jvpka39p370jwtin2s1wxv7x1sgm0y5fk518d0s.png\",\n          \"updated_at\": \"2021-04-09T17:29:55.000Z\"\n        },\n        {\n          \"categories\": [\n            \"promo\",\n            \"coupon\"\n          ],\n          \"created_at\": \"2021-04-09T17:29:21.000Z\",\n          \"editor\": \"design\",\n          \"generate_plain_content\": true,\n          \"id\": \"02dfd792-f31f-439a-a79e-5c47fbcfdbac\",\n          \"name\": \"Monthly Promo\",\n          \"subject\": \"Free Dozen Cupcakes\",\n          \"thumbnail_url\": \"//us-east-2-production-thumbnail-bucket.s3.amazonaws.com/hfyxahd7ues2ajuoeoqq2xe6ibdasl1q89ox0y9ncya2ftpoicssmtf9ddus4c39.png\",\n          \"updated_at\": \"2021-04-09T17:29:42.000Z\"\n        },\n        {\n          \"categories\": [],\n          \"created_at\": \"2020-10-09T17:33:46.000Z\",\n          \"editor\": \"design\",\n          \"generate_plain_content\": true,\n          \"id\": \"e54be823-19ef-4c6f-8b60-efd7514f492d\",\n          \"name\": \"Duplicate: Ingrid & Anders\",\n          \"subject\": \"Welcome to Ingrid & Anders!\",\n          \"thumbnail_url\": \"//us-east-2-production-thumbnail-bucket.s3.amazonaws.com/12kni9gjpyb9uxmwr9vk7unycjr70u95zoyhe9sg2zounul2zg7dih1s20k13q2z.png\",\n          \"updated_at\": \"2021-04-07T19:57:52.000Z\"\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Get SendGrid Pre-built Design",
      "method": "get",
      "endpoint": "designs/pre-builts/:id",
      "responses": [
        {
          "uuid": "",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Duplicate SendGrid Pre-built Design",
      "method": "post",
      "endpoint": "designs/pre-builts/:id",
      "responses": [
        {
          "uuid": "",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete Design",
      "method": "delete",
      "endpoint": "designs/:id",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Get Design",
      "method": "get",
      "endpoint": "designs/:id",
      "responses": [
        {
          "uuid": "",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Update Design",
      "method": "patch",
      "endpoint": "designs/:id",
      "responses": [
        {
          "uuid": "",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Duplicate Design",
      "method": "post",
      "endpoint": "designs/:id",
      "responses": [
        {
          "uuid": "",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"error_id\": \"\",\n  \"field\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve email statistics by device type.",
      "method": "get",
      "endpoint": "devices/stats",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  {\n    \"date\": \"\",\n    \"stats\": [\n      {\n        \"metrics\": {\n          \"opens\": {{faker 'random.number'}},\n          \"unique_opens\": {{faker 'random.number'}}\n        },\n        \"name\": \"\",\n        \"type\": \"\"\n      }\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve email statistics by country and state/province.",
      "method": "get",
      "endpoint": "geo/stats",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  {\n    \"date\": \"\",\n    \"stats\": [\n      {\n        \"metrics\": {\n          \"clicks\": {{faker 'random.number'}},\n          \"unique_clicks\": {{faker 'random.number'}}\n        },\n        \"name\": \"\",\n        \"type\": \"\"\n      }\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve all IP addresses",
      "method": "get",
      "endpoint": "ips",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  {\n    \"assigned_at\": {{faker 'random.number'}},\n    \"ip\": \"\",\n    \"pools\": [\n      \"\"\n    ],\n    \"rdns\": \"\",\n    \"start_date\": {{faker 'random.number'}},\n    \"subusers\": [\n      \"\"\n    ],\n    \"warmup\": {{faker 'random.boolean'}},\n    \"whitelabeled\": {{faker 'random.boolean'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Add IPs",
      "method": "post",
      "endpoint": "ips",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ips\": [\n    {\n      \"ip\": \"\",\n      \"subusers\": [\n        \"\"\n      ]\n    }\n  ],\n  \"remaining_ips\": {{faker 'random.number'}},\n  \"warmup\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve all assigned IPs",
      "method": "get",
      "endpoint": "ips/assigned",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  {\n    \"ip\": \"\",\n    \"pools\": [\n      \"\"\n    ],\n    \"start_date\": {{faker 'random.number'}},\n    \"warmup\": {{faker 'random.boolean'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve all IP pools",
      "method": "get",
      "endpoint": "ips/pools",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  {\n    \"name\": \"sunt sint enim\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Create an IP pool",
      "method": "post",
      "endpoint": "ips/pools",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"name\": \"sunt sint enim\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete an IP pool",
      "method": "delete",
      "endpoint": "ips/pools/:pool_name",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve all the IPs in a specified pool",
      "method": "get",
      "endpoint": "ips/pools/:pool_name",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ips\": [\n    \"\"\n  ],\n  \"pool_name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Rename an IP pool",
      "method": "put",
      "endpoint": "ips/pools/:pool_name",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"name\": \"sunt sint enim\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Add an IP address to a pool",
      "method": "post",
      "endpoint": "ips/pools/:pool_name/ips",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ip\": \"\",\n  \"pools\": [\n    \"\"\n  ],\n  \"start_date\": {{faker 'random.number'}},\n  \"warmup\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Remove an IP address from a pool",
      "method": "delete",
      "endpoint": "ips/pools/:pool_name/ips/:ip",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Get remaining IPs count",
      "method": "get",
      "endpoint": "ips/remaining",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"results\": [\n    {\n      \"period\": \"\",\n      \"price_per_ip\": {{faker 'random.number'}},\n      \"remaining\": {{faker 'random.number'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve all IPs currently in warmup",
      "method": "get",
      "endpoint": "ips/warmup",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  {\n    \"ip\": \"0.0.0.0\",\n    \"start_date\": 1409616000\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Start warming up an IP address",
      "method": "post",
      "endpoint": "ips/warmup",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  {\n    \"ip\": \"0.0.0.0\",\n    \"start_date\": 1409616000\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Stop warming up an IP address",
      "method": "delete",
      "endpoint": "ips/warmup/:ip_address",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve the warmup status for a specific IP address",
      "method": "get",
      "endpoint": "ips/warmup/:ip_address",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  {\n    \"ip\": \"0.0.0.0\",\n    \"start_date\": 1409616000\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve all IP pools an IP address belongs to",
      "method": "get",
      "endpoint": "ips/:ip_address",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ip\": \"\",\n  \"pools\": [\n    \"\"\n  ],\n  \"rdns\": \"\",\n  \"start_date\": {{faker 'random.number'}},\n  \"subusers\": [\n    \"\"\n  ],\n  \"warmup\": {{faker 'random.boolean'}},\n  \"whitelabeled\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Create a batch ID",
      "method": "post",
      "endpoint": "mail/batch",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"batch_id\": \"HkJ5yLYULb7Rj8GKSx7u025ouWVlMgAi\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"help\": {},\n      \"message\": \"\"\n    }\n  ],\n  \"id\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Validate batch ID",
      "method": "get",
      "endpoint": "mail/batch/:batch_id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"batch_id\": \"HkJ5yLYULb7Rj8GKSx7u025ouWVlMgAi\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"help\": {},\n      \"message\": \"\"\n    }\n  ],\n  \"id\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "v3 Mail Send",
      "method": "post",
      "endpoint": "mail/send",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 413,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve all mail settings",
      "method": "get",
      "endpoint": "mail_settings",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"result\": [\n    {\n      \"description\": \"\",\n      \"enabled\": {{faker 'random.boolean'}},\n      \"name\": \"\",\n      \"title\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve address whitelist mail settings",
      "method": "get",
      "endpoint": "mail_settings/address_whitelist",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"enabled\": true,\n  \"list\": [\n    \"email1@example.com\",\n    \"example.com\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Update address whitelist mail settings",
      "method": "patch",
      "endpoint": "mail_settings/address_whitelist",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"enabled\": true,\n  \"list\": [\n    \"email1@example.com\",\n    \"example.com\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve bounce purge mail settings",
      "method": "get",
      "endpoint": "mail_settings/bounce_purge",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"enabled\": false,\n  \"hard_bounces\": null,\n  \"soft_bounces\": 1234\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Update bounce purge mail settings",
      "method": "patch",
      "endpoint": "mail_settings/bounce_purge",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"enabled\": false,\n  \"hard_bounces\": null,\n  \"soft_bounces\": 1234\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve footer mail settings",
      "method": "get",
      "endpoint": "mail_settings/footer",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"enabled\": true,\n  \"html_content\": \"Example HTML content\",\n  \"plain_content\": \"Example plain content\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Update footer mail settings",
      "method": "patch",
      "endpoint": "mail_settings/footer",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"enabled\": true,\n  \"html_content\": \"Example HTML content\",\n  \"plain_content\": \"Example plain content\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve forward bounce mail settings",
      "method": "get",
      "endpoint": "mail_settings/forward_bounce",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"email\": null,\n  \"enabled\": false\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Update forward bounce mail settings",
      "method": "patch",
      "endpoint": "mail_settings/forward_bounce",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"email\": null,\n  \"enabled\": false\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve forward spam mail settings",
      "method": "get",
      "endpoint": "mail_settings/forward_spam",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"email\": \"\",\n  \"enabled\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Update forward spam mail settings",
      "method": "patch",
      "endpoint": "mail_settings/forward_spam",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"email\": \"\",\n  \"enabled\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve legacy template mail settings",
      "method": "get",
      "endpoint": "mail_settings/template",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"enabled\": false,\n  \"html_content\": \"<p><% body %>Example</p>\\n\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Update template mail settings",
      "method": "patch",
      "endpoint": "mail_settings/template",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"enabled\": {{faker 'random.boolean'}},\n  \"html_content\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve email statistics by mailbox provider.",
      "method": "get",
      "endpoint": "mailbox_providers/stats",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  {\n    \"date\": \"\",\n    \"stats\": [\n      {\n        \"metrics\": \"\",\n        \"name\": \"\",\n        \"type\": \"\"\n      }\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete Contacts",
      "method": "delete",
      "endpoint": "marketing/contacts",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"job_id\": {}\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {}\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Get Sample Contacts",
      "method": "get",
      "endpoint": "marketing/contacts",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"_metadata\": {\n    \"self\": \"\"\n  },\n  \"contact_count\": {{faker 'random.number'}},\n  \"result\": [\n    {\n      \"_metadata\": {\n        \"self\": \"\"\n      },\n      \"address_line_1\": \"\",\n      \"address_line_2\": \"\",\n      \"alternate_emails\": [\n        \"\"\n      ],\n      \"city\": \"\",\n      \"country\": \"\",\n      \"created_at\": \"\",\n      \"custom_fields\": {},\n      \"email\": \"\",\n      \"facebook\": \"\",\n      \"first_name\": \"\",\n      \"id\": \"\",\n      \"last_name\": \"\",\n      \"line\": \"\",\n      \"list_ids\": [\n        \"\"\n      ],\n      \"phone_number\": \"\",\n      \"postal_code\": \"\",\n      \"segment_ids\": [\n        \"\"\n      ],\n      \"state_province_region\": \"\",\n      \"unique_name\": \"\",\n      \"updated_at\": \"\",\n      \"whatsapp\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Add or Update a Contact",
      "method": "put",
      "endpoint": "marketing/contacts",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"job_id\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Get Batched Contacts by IDs",
      "method": "post",
      "endpoint": "marketing/contacts/batch",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"result\": [\n    {\n      \"_metadata\": {\n        \"self\": \"\"\n      },\n      \"address_line_1\": \"\",\n      \"address_line_2\": \"\",\n      \"alternate_emails\": [\n        \"\"\n      ],\n      \"city\": \"\",\n      \"country\": \"\",\n      \"created_at\": \"\",\n      \"custom_fields\": {},\n      \"email\": \"\",\n      \"facebook\": \"\",\n      \"first_name\": \"\",\n      \"id\": \"\",\n      \"last_name\": \"\",\n      \"line\": \"\",\n      \"list_ids\": [\n        \"\"\n      ],\n      \"phone_number\": \"\",\n      \"postal_code\": \"\",\n      \"segment_ids\": [\n        \"\"\n      ],\n      \"state_province_region\": \"\",\n      \"unique_name\": \"\",\n      \"updated_at\": \"\",\n      \"whatsapp\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Get Total Contact Count",
      "method": "get",
      "endpoint": "marketing/contacts/count",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"billable_breakdown\": {\n    \"breakdown\": {},\n    \"total\": {{faker 'random.number'}}\n  },\n  \"billable_count\": {{faker 'random.number'}},\n  \"contact_count\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Get All Existing Exports",
      "method": "get",
      "endpoint": "marketing/contacts/exports",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"_metadata\": {\n    \"next\": \"\",\n    \"prev\": \"\",\n    \"self\": \"\"\n  },\n  \"result\": [\n    {\n      \"_metadata\": {\n        \"next\": \"\",\n        \"prev\": \"\",\n        \"self\": \"\"\n      },\n      \"completed_at\": \"\",\n      \"created_at\": \"\",\n      \"expires_at\": \"\",\n      \"export_type\": \"\",\n      \"id\": \"\",\n      \"lists\": [\n        {\n          \"ID\": \"\",\n          \"Name\": \"\"\n        }\n      ],\n      \"segments\": [\n        {\n          \"ID\": \"\",\n          \"Name\": \"\"\n        }\n      ],\n      \"status\": \"\",\n      \"urls\": [\n        \"\"\n      ],\n      \"user_id\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"\": \"\",\n      \"error_id\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Export Contacts",
      "method": "post",
      "endpoint": "marketing/contacts/exports",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"_metadata\": {\n    \"count\": {{faker 'random.number'}},\n    \"next\": \"\",\n    \"prev\": \"\",\n    \"self\": \"\"\n  },\n  \"id\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Export Contacts Status",
      "method": "get",
      "endpoint": "marketing/contacts/exports/:id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"_metadata\": {\n    \"count\": {{faker 'random.number'}},\n    \"next\": \"\",\n    \"prev\": \"\",\n    \"self\": \"\"\n  },\n  \"completed_at\": \"\",\n  \"contact_count\": {{faker 'random.number'}},\n  \"created_at\": \"\",\n  \"expires_at\": \"\",\n  \"id\": \"\",\n  \"message\": \"\",\n  \"status\": \"{{oneOf (array 'pending' 'ready' 'failure')}}\",\n  \"updated_at\": \"\",\n  \"urls\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Import Contacts",
      "method": "put",
      "endpoint": "marketing/contacts/imports",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"job_id\": \"\",\n  \"upload_headers\": [\n    {\n      \"header\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"upload_uri\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Import Contacts Status",
      "method": "get",
      "endpoint": "marketing/contacts/imports/:id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"finished_at\": \"\",\n  \"id\": \"\",\n  \"job_type\": \"\",\n  \"results\": {\n    \"created_count\": {{faker 'random.number'}},\n    \"deleted_count\": {{faker 'random.number'}},\n    \"errored_count\": {{faker 'random.number'}},\n    \"errors_url\": \"\",\n    \"requested_count\": {{faker 'random.number'}},\n    \"updated_count\": {{faker 'random.number'}}\n  },\n  \"started_at\": \"\",\n  \"status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\",\n    \"parameter\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Search Contacts",
      "method": "post",
      "endpoint": "marketing/contacts/search",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"_metadata\": {\n    \"self\": \"\"\n  },\n  \"contact_count\": {{faker 'random.number'}},\n  \"result\": [\n    {\n      \"_metadata\": {\n        \"self\": \"\"\n      },\n      \"address_line_1\": \"\",\n      \"address_line_2\": \"\",\n      \"alternate_emails\": [\n        \"\"\n      ],\n      \"city\": \"\",\n      \"country\": \"\",\n      \"created_at\": \"\",\n      \"custom_fields\": {},\n      \"email\": \"\",\n      \"facebook\": \"\",\n      \"first_name\": \"\",\n      \"id\": \"\",\n      \"last_name\": \"\",\n      \"line\": \"\",\n      \"list_ids\": [\n        \"\"\n      ],\n      \"phone_number\": \"\",\n      \"postal_code\": \"\",\n      \"segment_ids\": [\n        \"\"\n      ],\n      \"state_province_region\": \"\",\n      \"unique_name\": \"\",\n      \"updated_at\": \"\",\n      \"whatsapp\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 408,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Get Contacts by Emails",
      "method": "post",
      "endpoint": "marketing/contacts/search/emails",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"result\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Get a Contact by ID",
      "method": "get",
      "endpoint": "marketing/contacts/:id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"_metadata\": {\n    \"self\": \"\"\n  },\n  \"address_line_1\": \"\",\n  \"address_line_2\": \"\",\n  \"alternate_emails\": [\n    \"\"\n  ],\n  \"city\": \"\",\n  \"country\": \"\",\n  \"created_at\": \"\",\n  \"custom_fields\": {},\n  \"email\": \"\",\n  \"facebook\": \"\",\n  \"first_name\": \"\",\n  \"id\": \"\",\n  \"last_name\": \"\",\n  \"line\": \"\",\n  \"list_ids\": [\n    \"\"\n  ],\n  \"phone_number\": \"\",\n  \"postal_code\": \"\",\n  \"segment_ids\": [\n    \"\"\n  ],\n  \"state_province_region\": \"\",\n  \"unique_name\": \"\",\n  \"updated_at\": \"\",\n  \"whatsapp\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Get All Field Definitions",
      "method": "get",
      "endpoint": "marketing/field_definitions",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"_metadata\": {\n    \"count\": {{faker 'random.number'}},\n    \"next\": \"\",\n    \"prev\": \"\",\n    \"self\": \"\"\n  },\n  \"custom_fields\": [\n    {\n      \"field_type\": \"Date\",\n      \"id\": \"a1_D\",\n      \"name\": \"custom_field_name\"\n    }\n  ],\n  \"reserved_fields\": [\n    {\n      \"field_type\": \"Text\",\n      \"id\": \"_rf20_T\",\n      \"name\": \"automation_id\",\n      \"read_only\": true\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Create Custom Field Definition",
      "method": "post",
      "endpoint": "marketing/field_definitions",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"field_type\": \"{{oneOf (array 'Text' 'Number' 'Date')}}\",\n  \"id\": \"\",\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete Custom Field Definition",
      "method": "delete",
      "endpoint": "marketing/field_definitions/:custom_field_id",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Update Custom Field Definition",
      "method": "patch",
      "endpoint": "marketing/field_definitions/:custom_field_id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"field_type\": \"{{oneOf (array 'Text' 'Number' 'Date')}}\",\n  \"id\": \"\",\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Get All Lists",
      "method": "get",
      "endpoint": "marketing/lists",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"_metadata\": {\n    \"count\": {{faker 'random.number'}},\n    \"next\": \"\",\n    \"prev\": \"\",\n    \"self\": \"\"\n  },\n  \"result\": [\n    {\n      \"_metadata\": {\n        \"self\": \"\"\n      },\n      \"contact_count\": {{faker 'random.number'}},\n      \"id\": \"\",\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Create List",
      "method": "post",
      "endpoint": "marketing/lists",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"_metadata\": {\n    \"self\": \"\"\n  },\n  \"contact_count\": {{faker 'random.number'}},\n  \"id\": \"\",\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete a list",
      "method": "delete",
      "endpoint": "marketing/lists/:id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"job_id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {}\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Get a List by ID",
      "method": "get",
      "endpoint": "marketing/lists/:id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"_metadata\": {\n    \"self\": \"\"\n  },\n  \"contact_count\": {{faker 'random.number'}},\n  \"id\": \"\",\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\",\n    \"parameter\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Update List",
      "method": "patch",
      "endpoint": "marketing/lists/:id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"_metadata\": {\n    \"self\": \"\"\n  },\n  \"contact_count\": {{faker 'random.number'}},\n  \"id\": \"\",\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\",\n      \"parameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Remove Contacts from a List",
      "method": "delete",
      "endpoint": "marketing/lists/:id/contacts",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"job_id\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"error_id\": \"\",\n  \"field\": \"\",\n  \"message\": \"\",\n  \"parameter\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Get List Contact Count",
      "method": "get",
      "endpoint": "marketing/lists/:id/contacts/count",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"billable_count\": {{faker 'random.number'}},\n  \"contact_count\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Get List of Segments",
      "method": "get",
      "endpoint": "marketing/segments",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"results\": [\n    {\n      \"contacts_count\": {{faker 'random.number'}},\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"id\": \"{{faker 'random.uuid'}}\",\n      \"name\": \"\",\n      \"next_sample_update\": \"\",\n      \"parent_list_id\": \"{{faker 'random.uuid'}}\",\n      \"sample_updated_at\": \"{{faker 'date.recent' 365}}\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Create Segment",
      "method": "post",
      "endpoint": "marketing/segments",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"contacts_count\": 9266921,\n  \"contacts_sample\": [\n    {\n      \"address_line_1\": \"sunt aliqua\",\n      \"address_line_2\": \"sit proident Lorem veniam labore\",\n      \"alternate_emails\": [\n        \"yKDUP11FDch@QoU.vwy\",\n        \"ZNSN5@czAMqPi.at\",\n        \"7wr51kFVVKlcBSH@DWxOueOZepetzBrku.qosk\",\n        \"iib-ObtO7Fxz5@vLJPRIFKPOqJGCEqcIDab.ypn\"\n      ],\n      \"city\": \"ȎţȸÛ\\tč\\u000bCŁ\",\n      \"contact_id\": \"c1183ada-b784-49ac-9b1f-50e73578a6dc\",\n      \"country\": \"do reprehenderit qui\",\n      \"custom_fields\": {\n        \"custom_field_name1\": \"esse\",\n        \"custom_field_name2\": \"in consectetur ut aliqua sint\"\n      },\n      \"first_name\": \"est\",\n      \"last_name\": \"eiusmod in laboris velit cupidatat\",\n      \"postal_code\": 30296612,\n      \"primary_email\": \"ft88@d.izxx\",\n      \"state_province_region\": \"ut proident\"\n    }\n  ],\n  \"created_at\": \"2085-08-08T21:07:05.692Z\",\n  \"id\": \"58567a46-305e-48d1-b4f8-a006c906920e\",\n  \"name\": \"culpa\",\n  \"next_sample_update\": \"\",\n  \"parent_list_id\": \"2357714d-3d82-4c80-826c-b44a4147f81c\",\n  \"query_dsl\": \"cillum eiusmod\",\n  \"sample_updated_at\": \"3407-09-25T04:25:02.140Z\",\n  \"updated_at\": \"4431-05-07T22:23:22.352Z\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Get List of Segments",
      "method": "get",
      "endpoint": "marketing/segments/2.0",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"_metadata\": {\n    \"count\": {{faker 'random.number'}},\n    \"next\": \"\",\n    \"prev\": \"\",\n    \"self\": \"\"\n  },\n  \"contacts_count\": {{faker 'random.number'}},\n  \"created_at\": \"\",\n  \"id\": \"{{faker 'random.uuid'}}\",\n  \"name\": \"\",\n  \"next_sample_update\": \"\",\n  \"parent_list_ids\": [\n    \"\"\n  ],\n  \"query_version\": \"\",\n  \"sample_updated_at\": \"\",\n  \"status\": {\n    \"error_message\": \"\",\n    \"query_validation\": \"\"\n  },\n  \"updated_at\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Create Segment",
      "method": "post",
      "endpoint": "marketing/segments/2.0",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"contacts_count\": {{faker 'random.number'}},\n  \"contacts_sample\": [\n    {\n      \"address_line_1\": \"street address / P.O. box / CompanyName / c/o\",\n      \"address_line_2\": \"apartment, suite, unit, building, floor etc\",\n      \"alternate_emails\": [\n        \"abcd@yahoo.com\",\n        \"abcd@hotmail.com\"\n      ],\n      \"city\": \"Redwood City\",\n      \"country\": \"USA\",\n      \"custom_fields\": {\n        \"custom_field_name1\": \"custom_field_value1\",\n        \"custom_field_name2\": \"custom_field_value2\"\n      },\n      \"email\": \"abcd@gmail.com\",\n      \"first_name\": \"Ab\",\n      \"id\": \"47d23ab0-d895-4359-a0d1-ffc7a6fc7e70\",\n      \"last_name\": \"Cd\",\n      \"postal_code\": 94063,\n      \"state_province_region\": \"CA\"\n    }\n  ],\n  \"created_at\": \"\",\n  \"id\": \"{{faker 'random.uuid'}}\",\n  \"name\": \"\",\n  \"next_sample_update\": \"\",\n  \"parent_list_ids\": [\n    \"\"\n  ],\n  \"query_dsl\": \"\",\n  \"query_version\": \"\",\n  \"sample_updated_at\": \"\",\n  \"status\": {\n    \"error_message\": \"\",\n    \"query_validation\": \"\"\n  },\n  \"updated_at\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete segment",
      "method": "delete",
      "endpoint": "marketing/segments/2.0/:segment_id",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Get Segment by ID",
      "method": "get",
      "endpoint": "marketing/segments/2.0/:segment_id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"contacts_count\": {{faker 'random.number'}},\n  \"contacts_sample\": [\n    {\n      \"address_line_1\": \"street address / P.O. box / CompanyName / c/o\",\n      \"address_line_2\": \"apartment, suite, unit, building, floor etc\",\n      \"alternate_emails\": [\n        \"abcd@yahoo.com\",\n        \"abcd@hotmail.com\"\n      ],\n      \"city\": \"Redwood City\",\n      \"country\": \"USA\",\n      \"custom_fields\": {\n        \"custom_field_name1\": \"custom_field_value1\",\n        \"custom_field_name2\": \"custom_field_value2\"\n      },\n      \"email\": \"abcd@gmail.com\",\n      \"first_name\": \"Ab\",\n      \"id\": \"47d23ab0-d895-4359-a0d1-ffc7a6fc7e70\",\n      \"last_name\": \"Cd\",\n      \"postal_code\": 94063,\n      \"state_province_region\": \"CA\"\n    }\n  ],\n  \"created_at\": \"\",\n  \"id\": \"{{faker 'random.uuid'}}\",\n  \"name\": \"\",\n  \"next_sample_update\": \"\",\n  \"parent_list_ids\": [\n    \"\"\n  ],\n  \"query_dsl\": \"\",\n  \"query_version\": \"\",\n  \"sample_updated_at\": \"\",\n  \"status\": {\n    \"error_message\": \"\",\n    \"query_validation\": \"\"\n  },\n  \"updated_at\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Update Segment",
      "method": "patch",
      "endpoint": "marketing/segments/2.0/:segment_id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"contacts_count\": {{faker 'random.number'}},\n  \"contacts_sample\": [\n    {\n      \"address_line_1\": \"street address / P.O. box / CompanyName / c/o\",\n      \"address_line_2\": \"apartment, suite, unit, building, floor etc\",\n      \"alternate_emails\": [\n        \"abcd@yahoo.com\",\n        \"abcd@hotmail.com\"\n      ],\n      \"city\": \"Redwood City\",\n      \"country\": \"USA\",\n      \"custom_fields\": {\n        \"custom_field_name1\": \"custom_field_value1\",\n        \"custom_field_name2\": \"custom_field_value2\"\n      },\n      \"email\": \"abcd@gmail.com\",\n      \"first_name\": \"Ab\",\n      \"id\": \"47d23ab0-d895-4359-a0d1-ffc7a6fc7e70\",\n      \"last_name\": \"Cd\",\n      \"postal_code\": 94063,\n      \"state_province_region\": \"CA\"\n    }\n  ],\n  \"created_at\": \"\",\n  \"id\": \"{{faker 'random.uuid'}}\",\n  \"name\": \"\",\n  \"next_sample_update\": \"\",\n  \"parent_list_ids\": [\n    \"\"\n  ],\n  \"query_dsl\": \"\",\n  \"query_version\": \"\",\n  \"sample_updated_at\": \"\",\n  \"status\": {\n    \"error_message\": \"\",\n    \"query_validation\": \"\"\n  },\n  \"updated_at\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Bulk Delete Segments",
      "method": "post",
      "endpoint": "marketing/segments/delete",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error\": \"\",\n      \"id\": \"\",\n      \"resources\": {\n        \"ids\": [\n          \"\"\n        ],\n        \"type\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 202,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete Segment",
      "method": "delete",
      "endpoint": "marketing/segments/:segment_id",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 202,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Get Segment by ID",
      "method": "get",
      "endpoint": "marketing/segments/:segment_id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"contacts_count\": 9266921,\n  \"contacts_sample\": [\n    {\n      \"address_line_1\": \"sunt aliqua\",\n      \"address_line_2\": \"sit proident Lorem veniam labore\",\n      \"alternate_emails\": [\n        \"yKDUP11FDch@QoU.vwy\",\n        \"ZNSN5@czAMqPi.at\",\n        \"7wr51kFVVKlcBSH@DWxOueOZepetzBrku.qosk\",\n        \"iib-ObtO7Fxz5@vLJPRIFKPOqJGCEqcIDab.ypn\"\n      ],\n      \"city\": \"ȎţȸÛ\\tč\\u000bCŁ\",\n      \"contact_id\": \"c1183ada-b784-49ac-9b1f-50e73578a6dc\",\n      \"country\": \"do reprehenderit qui\",\n      \"custom_fields\": {\n        \"custom_field_name1\": \"esse\",\n        \"custom_field_name2\": \"in consectetur ut aliqua sint\"\n      },\n      \"first_name\": \"est\",\n      \"last_name\": \"eiusmod in laboris velit cupidatat\",\n      \"postal_code\": 30296612,\n      \"primary_email\": \"ft88@d.izxx\",\n      \"state_province_region\": \"ut proident\"\n    }\n  ],\n  \"created_at\": \"2085-08-08T21:07:05.692Z\",\n  \"id\": \"58567a46-305e-48d1-b4f8-a006c906920e\",\n  \"name\": \"culpa\",\n  \"next_sample_update\": \"\",\n  \"parent_list_id\": \"2357714d-3d82-4c80-826c-b44a4147f81c\",\n  \"query_dsl\": \"cillum eiusmod\",\n  \"sample_updated_at\": \"3407-09-25T04:25:02.140Z\",\n  \"updated_at\": \"4431-05-07T22:23:22.352Z\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Update Segment",
      "method": "patch",
      "endpoint": "marketing/segments/:segment_id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"contacts_count\": 9266921,\n  \"contacts_sample\": [\n    {\n      \"address_line_1\": \"sunt aliqua\",\n      \"address_line_2\": \"sit proident Lorem veniam labore\",\n      \"alternate_emails\": [\n        \"yKDUP11FDch@QoU.vwy\",\n        \"ZNSN5@czAMqPi.at\",\n        \"7wr51kFVVKlcBSH@DWxOueOZepetzBrku.qosk\",\n        \"iib-ObtO7Fxz5@vLJPRIFKPOqJGCEqcIDab.ypn\"\n      ],\n      \"city\": \"ȎţȸÛ\\tč\\u000bCŁ\",\n      \"contact_id\": \"c1183ada-b784-49ac-9b1f-50e73578a6dc\",\n      \"country\": \"do reprehenderit qui\",\n      \"custom_fields\": {\n        \"custom_field_name1\": \"esse\",\n        \"custom_field_name2\": \"in consectetur ut aliqua sint\"\n      },\n      \"first_name\": \"est\",\n      \"last_name\": \"eiusmod in laboris velit cupidatat\",\n      \"postal_code\": 30296612,\n      \"primary_email\": \"ft88@d.izxx\",\n      \"state_province_region\": \"ut proident\"\n    }\n  ],\n  \"created_at\": \"2085-08-08T21:07:05.692Z\",\n  \"id\": \"58567a46-305e-48d1-b4f8-a006c906920e\",\n  \"name\": \"culpa\",\n  \"next_sample_update\": \"\",\n  \"parent_list_id\": \"2357714d-3d82-4c80-826c-b44a4147f81c\",\n  \"query_dsl\": \"cillum eiusmod\",\n  \"sample_updated_at\": \"3407-09-25T04:25:02.140Z\",\n  \"updated_at\": \"4431-05-07T22:23:22.352Z\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Create a Sender Identity",
      "method": "post",
      "endpoint": "marketing/senders",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"address\": \"123 Elm St.\",\n  \"address_2\": \"Apt. 456\",\n  \"city\": \"Denver\",\n  \"country\": \"United States\",\n  \"created_at\": 1449872165,\n  \"from\": {\n    \"email\": \"from@example.com\",\n    \"name\": \"Example INC\"\n  },\n  \"id\": 1,\n  \"locked\": false,\n  \"nickname\": \"My Sender ID\",\n  \"reply_to\": {\n    \"email\": \"replyto@example.com\",\n    \"name\": \"Example INC\"\n  },\n  \"state\": \"Colorado\",\n  \"updated_at\": 1449872165,\n  \"verified\": true,\n  \"zip\": \"80202\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Bulk Delete Single Sends",
      "method": "delete",
      "endpoint": "marketing/singlesends",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Get All Single Sends",
      "method": "get",
      "endpoint": "marketing/singlesends",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"_metadata\": {\n    \"count\": {{faker 'random.number'}},\n    \"next\": \"\",\n    \"prev\": \"\",\n    \"self\": \"\"\n  },\n  \"result\": [\n    {\n      \"abtest\": {\n        \"duration\": \"\",\n        \"expiration_date\": \"\",\n        \"test_percentage\": {{faker 'random.number'}},\n        \"type\": \"{{oneOf (array 'subject' 'content')}}\",\n        \"winner_criteria\": \"{{oneOf (array 'open' 'click' 'manual')}}\",\n        \"winner_selected_at\": \"\",\n        \"winning_template_id\": \"\"\n      },\n      \"categories\": [\n        \"\"\n      ],\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"id\": \"{{faker 'random.uuid'}}\",\n      \"is_abtest\": {{faker 'random.boolean'}},\n      \"name\": \"\",\n      \"send_at\": \"{{faker 'date.recent' 365}}\",\n      \"status\": \"{{oneOf (array 'draft' 'scheduled' 'triggered')}}\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Create Single Send",
      "method": "post",
      "endpoint": "marketing/singlesends",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"categories\": [\n    \"unique opens\"\n  ],\n  \"created_at\": \"2020-05-18T17:28:27.272Z\",\n  \"email_config\": {\n    \"custom_unsubscribe_url\": null,\n    \"editor\": \"code\",\n    \"generate_plain_content\": true,\n    \"html_content\": \"\",\n    \"ip_pool\": null,\n    \"plain_content\": \"\",\n    \"sender_id\": null,\n    \"subject\": \"\",\n    \"suppression_group_id\": null\n  },\n  \"id\": \"27c21bbf-a12c-440b-b8bf-c526975328ca\",\n  \"name\": \"Example API Created Single Send\",\n  \"send_at\": \"2020-06-16T00:19:55.106Z\",\n  \"send_to\": {\n    \"list_ids\": [\n      \"f2fe66a1-43f3-4e3a-87b1-c6a600d805f0\"\n    ]\n  },\n  \"status\": \"scheduled\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Get All Categories",
      "method": "get",
      "endpoint": "marketing/singlesends/categories",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"categories\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Get Single Sends Search",
      "method": "post",
      "endpoint": "marketing/singlesends/search",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"_metadata\": {\n    \"count\": {{faker 'random.number'}},\n    \"next\": \"\",\n    \"prev\": \"\",\n    \"self\": \"\"\n  },\n  \"result\": [\n    {\n      \"abtest\": {\n        \"duration\": \"\",\n        \"expiration_date\": \"\",\n        \"test_percentage\": {{faker 'random.number'}},\n        \"type\": \"{{oneOf (array 'subject' 'content')}}\",\n        \"winner_criteria\": \"{{oneOf (array 'open' 'click' 'manual')}}\",\n        \"winner_selected_at\": \"\",\n        \"winning_template_id\": \"\"\n      },\n      \"categories\": [\n        \"\"\n      ],\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"id\": \"{{faker 'random.uuid'}}\",\n      \"is_abtest\": {{faker 'random.boolean'}},\n      \"name\": \"\",\n      \"send_at\": \"{{faker 'date.recent' 365}}\",\n      \"status\": \"{{oneOf (array 'draft' 'scheduled' 'triggered')}}\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete Single Send by ID",
      "method": "delete",
      "endpoint": "marketing/singlesends/:id",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Get Single Send by ID",
      "method": "get",
      "endpoint": "marketing/singlesends/:id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"categories\": [\n    \"unique opens\"\n  ],\n  \"created_at\": \"2020-05-18T17:28:27.272Z\",\n  \"email_config\": {\n    \"custom_unsubscribe_url\": null,\n    \"editor\": \"code\",\n    \"generate_plain_content\": true,\n    \"html_content\": \"\",\n    \"ip_pool\": null,\n    \"plain_content\": \"\",\n    \"sender_id\": null,\n    \"subject\": \"\",\n    \"suppression_group_id\": null\n  },\n  \"id\": \"27c21bbf-a12c-440b-b8bf-c526975328ca\",\n  \"name\": \"Example API Created Single Send\",\n  \"send_at\": \"2020-06-16T00:19:55.106Z\",\n  \"send_to\": {\n    \"list_ids\": [\n      \"f2fe66a1-43f3-4e3a-87b1-c6a600d805f0\"\n    ]\n  },\n  \"status\": \"scheduled\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Update Single Send",
      "method": "patch",
      "endpoint": "marketing/singlesends/:id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"categories\": [\n    \"unique opens\"\n  ],\n  \"created_at\": \"2020-05-18T17:28:27.272Z\",\n  \"email_config\": {\n    \"custom_unsubscribe_url\": null,\n    \"editor\": \"code\",\n    \"generate_plain_content\": true,\n    \"html_content\": \"\",\n    \"ip_pool\": null,\n    \"plain_content\": \"\",\n    \"sender_id\": null,\n    \"subject\": \"\",\n    \"suppression_group_id\": null\n  },\n  \"id\": \"27c21bbf-a12c-440b-b8bf-c526975328ca\",\n  \"name\": \"Example API Created Single Send\",\n  \"send_at\": \"2020-06-16T00:19:55.106Z\",\n  \"send_to\": {\n    \"list_ids\": [\n      \"f2fe66a1-43f3-4e3a-87b1-c6a600d805f0\"\n    ]\n  },\n  \"status\": \"scheduled\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Duplicate Single Send",
      "method": "post",
      "endpoint": "marketing/singlesends/:id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"categories\": [\n    \"unique opens\"\n  ],\n  \"created_at\": \"2020-05-18T17:28:27.272Z\",\n  \"email_config\": {\n    \"custom_unsubscribe_url\": null,\n    \"editor\": \"code\",\n    \"generate_plain_content\": true,\n    \"html_content\": \"\",\n    \"ip_pool\": null,\n    \"plain_content\": \"\",\n    \"sender_id\": null,\n    \"subject\": \"\",\n    \"suppression_group_id\": null\n  },\n  \"id\": \"27c21bbf-a12c-440b-b8bf-c526975328ca\",\n  \"name\": \"Example API Created Single Send\",\n  \"send_at\": \"2020-06-16T00:19:55.106Z\",\n  \"send_to\": {\n    \"list_ids\": [\n      \"f2fe66a1-43f3-4e3a-87b1-c6a600d805f0\"\n    ]\n  },\n  \"status\": \"scheduled\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete Single Send Schedule",
      "method": "delete",
      "endpoint": "marketing/singlesends/:id/schedule",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"send_at\": \"{{faker 'date.recent' 365}}\",\n  \"status\": \"{{oneOf (array 'draft' 'scheduled' 'triggered')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Schedule Single Send",
      "method": "put",
      "endpoint": "marketing/singlesends/:id/schedule",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"send_at\": \"{{faker 'date.recent' 365}}\",\n  \"status\": \"{{oneOf (array 'scheduled')}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Get All Automation Stats",
      "method": "get",
      "endpoint": "marketing/stats/automations",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"_metadata\": {\n    \"count\": {{faker 'random.number'}},\n    \"next\": \"\",\n    \"prev\": \"\",\n    \"self\": \"\"\n  },\n  \"results\": [\n    {\n      \"aggregation\": \"total\",\n      \"id\": \"{{faker 'random.uuid'}}\",\n      \"stats\": {\n        \"bounce_drops\": {{faker 'random.number'}},\n        \"bounces\": {{faker 'random.number'}},\n        \"clicks\": {{faker 'random.number'}},\n        \"delivered\": {{faker 'random.number'}},\n        \"invalid_emails\": {{faker 'random.number'}},\n        \"opens\": {{faker 'random.number'}},\n        \"requests\": {{faker 'random.number'}},\n        \"spam_report_drops\": {{faker 'random.number'}},\n        \"spam_reports\": {{faker 'random.number'}},\n        \"unique_clicks\": {{faker 'random.number'}},\n        \"unique_opens\": {{faker 'random.number'}},\n        \"unsubscribes\": {{faker 'random.number'}}\n      },\n      \"step_id\": \"all\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Export Automation Stats",
      "method": "get",
      "endpoint": "marketing/stats/automations/export",
      "responses": [
        {
          "uuid": "",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Get Automation Stats by ID",
      "method": "get",
      "endpoint": "marketing/stats/automations/:id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"_metadata\": {\n    \"count\": {{faker 'random.number'}},\n    \"next\": \"\",\n    \"prev\": \"\",\n    \"self\": \"\"\n  },\n  \"results\": [\n    {\n      \"aggregation\": \"total\",\n      \"id\": \"{{faker 'random.uuid'}}\",\n      \"stats\": {\n        \"bounce_drops\": {{faker 'random.number'}},\n        \"bounces\": {{faker 'random.number'}},\n        \"clicks\": {{faker 'random.number'}},\n        \"delivered\": {{faker 'random.number'}},\n        \"invalid_emails\": {{faker 'random.number'}},\n        \"opens\": {{faker 'random.number'}},\n        \"requests\": {{faker 'random.number'}},\n        \"spam_report_drops\": {{faker 'random.number'}},\n        \"spam_reports\": {{faker 'random.number'}},\n        \"unique_clicks\": {{faker 'random.number'}},\n        \"unique_opens\": {{faker 'random.number'}},\n        \"unsubscribes\": {{faker 'random.number'}}\n      },\n      \"step_id\": \"all\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Get Automation Click Tracking Stats by ID",
      "method": "get",
      "endpoint": "marketing/stats/automations/:id/links",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"_metadata\": {\n    \"count\": {{faker 'random.number'}},\n    \"next\": \"\",\n    \"prev\": \"\",\n    \"self\": \"\"\n  },\n  \"results\": [\n    {\n      \"clicks\": {{faker 'random.number'}},\n      \"step_id\": \"{{faker 'random.uuid'}}\",\n      \"url\": \"\",\n      \"url_location\": {{faker 'random.number'}}\n    }\n  ],\n  \"total_clicks\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Get All Single Sends Stats",
      "method": "get",
      "endpoint": "marketing/stats/singlesends",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"_metadata\": {\n    \"count\": {{faker 'random.number'}},\n    \"next\": \"\",\n    \"prev\": \"\",\n    \"self\": \"\"\n  },\n  \"results\": [\n    {\n      \"ab_phase\": \"{{oneOf (array 'send' 'test' 'all')}}\",\n      \"ab_variation\": \"all\",\n      \"aggregation\": \"total\",\n      \"id\": \"{{faker 'random.uuid'}}\",\n      \"stats\": {\n        \"bounce_drops\": {{faker 'random.number'}},\n        \"bounces\": {{faker 'random.number'}},\n        \"clicks\": {{faker 'random.number'}},\n        \"delivered\": {{faker 'random.number'}},\n        \"invalid_emails\": {{faker 'random.number'}},\n        \"opens\": {{faker 'random.number'}},\n        \"requests\": {{faker 'random.number'}},\n        \"spam_report_drops\": {{faker 'random.number'}},\n        \"spam_reports\": {{faker 'random.number'}},\n        \"unique_clicks\": {{faker 'random.number'}},\n        \"unique_opens\": {{faker 'random.number'}},\n        \"unsubscribes\": {{faker 'random.number'}}\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Export Single Send Stats",
      "method": "get",
      "endpoint": "marketing/stats/singlesends/export",
      "responses": [
        {
          "uuid": "",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Get Single Send Stats by ID",
      "method": "get",
      "endpoint": "marketing/stats/singlesends/:id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"_metadata\": {\n    \"count\": {{faker 'random.number'}},\n    \"next\": \"\",\n    \"prev\": \"\",\n    \"self\": \"\"\n  },\n  \"results\": [\n    {\n      \"ab_phase\": \"{{oneOf (array 'send' 'test' 'all')}}\",\n      \"ab_variation\": \"all\",\n      \"aggregation\": \"total\",\n      \"id\": \"{{faker 'random.uuid'}}\",\n      \"stats\": {\n        \"bounce_drops\": {{faker 'random.number'}},\n        \"bounces\": {{faker 'random.number'}},\n        \"clicks\": {{faker 'random.number'}},\n        \"delivered\": {{faker 'random.number'}},\n        \"invalid_emails\": {{faker 'random.number'}},\n        \"opens\": {{faker 'random.number'}},\n        \"requests\": {{faker 'random.number'}},\n        \"spam_report_drops\": {{faker 'random.number'}},\n        \"spam_reports\": {{faker 'random.number'}},\n        \"unique_clicks\": {{faker 'random.number'}},\n        \"unique_opens\": {{faker 'random.number'}},\n        \"unsubscribes\": {{faker 'random.number'}}\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Get Single Send Click Tracking Stats by ID",
      "method": "get",
      "endpoint": "marketing/stats/singlesends/:id/links",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"_metadata\": {\n    \"count\": {{faker 'random.number'}},\n    \"next\": \"\",\n    \"prev\": \"\",\n    \"self\": \"\"\n  },\n  \"results\": [\n    {\n      \"ab_phase\": \"{{oneOf (array 'send' 'test' 'all')}}\",\n      \"ab_variation\": \"{{faker 'random.uuid'}}\",\n      \"clicks\": {{faker 'random.number'}},\n      \"url\": \"\",\n      \"url_location\": {{faker 'random.number'}}\n    }\n  ],\n  \"total_clicks\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Send a Test Marketing Email",
      "method": "post",
      "endpoint": "marketing/test/send_email",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 202,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Filter all messages",
      "method": "get",
      "endpoint": "messages",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"messages\": [\n    {\n      \"clicks_count\": 2,\n      \"from_email\": \"from@test.com\",\n      \"last_event_time\": \"2017-10-13T18:56:21.000Z\",\n      \"msg_id\": \"abc123\",\n      \"opens_count\": 1,\n      \"status\": \"processed\",\n      \"subject\": \"anim Duis sint veniam\",\n      \"to_email\": \"test@test.com\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 429,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Request CSV",
      "method": "post",
      "endpoint": "messages/download",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"message\": \"\",\n  \"status\": \"{{oneOf (array 'pending')}}\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 429,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Download CSV",
      "method": "get",
      "endpoint": "messages/download/:download_uuid",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"csv\": \"\",\n  \"presigned_url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Filter messages by message ID",
      "method": "get",
      "endpoint": "messages/:msg_id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"api_key_id\": \"sdfsdfsdf123\",\n  \"asm_group_id\": 11376349,\n  \"categories\": [\n    \"hi\",\n    \"bye\"\n  ],\n  \"events\": [\n    {\n      \"event_name\": \"bounced\",\n      \"processed\": 1492453589,\n      \"server_response\": \"some error message\"\n    }\n  ],\n  \"from_email\": \"test@test.com\",\n  \"msg_id\": \"in aliquip id aliqua\",\n  \"originating_ip\": \"2.3.4.5\",\n  \"outbound_ip\": \"1.2.3.4\",\n  \"outbound_ip_type\": \"dedicated\",\n  \"status\": \"not delivered\",\n  \"subject\": \"est incididunt adipisicing pariatur\",\n  \"teammate\": \"\",\n  \"template_id\": \"123e4567-e89b-12d3-a456-426655440000\",\n  \"to_email\": \"send@test.com\",\n  \"unique_args\": \"{'key': 'value'}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 429,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Returns a list of all partner settings.",
      "method": "get",
      "endpoint": "partner_settings",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"result\": [\n    {\n      \"description\": \"\",\n      \"enabled\": {{faker 'random.boolean'}},\n      \"name\": \"\",\n      \"title\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Returns all New Relic partner settings.",
      "method": "get",
      "endpoint": "partner_settings/new_relic",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"enable_subuser_statistics\": {{faker 'random.boolean'}},\n  \"enabled\": {{faker 'random.boolean'}},\n  \"license_key\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Updates New Relic partner settings.",
      "method": "patch",
      "endpoint": "partner_settings/new_relic",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"enable_subuser_statistics\": {{faker 'random.boolean'}},\n  \"enabled\": {{faker 'random.boolean'}},\n  \"license_key\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve a list of scopes for which this user has access.",
      "method": "get",
      "endpoint": "scopes",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"scopes\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve access requests",
      "method": "get",
      "endpoint": "scopes/requests",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  {\n    \"email\": \"\",\n    \"first_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"last_name\": \"\",\n    \"scope_group_name\": \"\",\n    \"username\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Deny access request",
      "method": "delete",
      "endpoint": "scopes/requests/:request_id",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Approve access request",
      "method": "patch",
      "endpoint": "scopes/requests/:request_id/approve",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"scope_group_name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Get all Sender Identities",
      "method": "get",
      "endpoint": "senders",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"result\": [\n    {\n      \"address\": \"123 Elm St.\",\n      \"address_2\": \"Apt. 456\",\n      \"city\": \"Denver\",\n      \"country\": \"United States\",\n      \"created_at\": 1449872165,\n      \"from\": {\n        \"email\": \"from@example.com\",\n        \"name\": \"Example INC\"\n      },\n      \"id\": 1,\n      \"locked\": false,\n      \"nickname\": \"My Sender ID\",\n      \"reply_to\": {\n        \"email\": \"replyto@example.com\",\n        \"name\": \"Example INC\"\n      },\n      \"state\": \"Colorado\",\n      \"updated_at\": 1449872165,\n      \"verified\": true,\n      \"zip\": \"80202\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Create a Sender Identity",
      "method": "post",
      "endpoint": "senders",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"address\": \"123 Elm St.\",\n  \"address_2\": \"Apt. 456\",\n  \"city\": \"Denver\",\n  \"country\": \"United States\",\n  \"created_at\": 1449872165,\n  \"from\": {\n    \"email\": \"from@example.com\",\n    \"name\": \"Example INC\"\n  },\n  \"id\": 1,\n  \"locked\": false,\n  \"nickname\": \"My Sender ID\",\n  \"reply_to\": {\n    \"email\": \"replyto@example.com\",\n    \"name\": \"Example INC\"\n  },\n  \"state\": \"Colorado\",\n  \"updated_at\": 1449872165,\n  \"verified\": true,\n  \"zip\": \"80202\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete a Sender Identity",
      "method": "delete",
      "endpoint": "senders/:sender_id",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "View a Sender Identity",
      "method": "get",
      "endpoint": "senders/:sender_id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"address\": \"123 Elm St.\",\n  \"address_2\": \"Apt. 456\",\n  \"city\": \"Denver\",\n  \"country\": \"United States\",\n  \"created_at\": 1449872165,\n  \"from\": {\n    \"email\": \"from@example.com\",\n    \"name\": \"Example INC\"\n  },\n  \"id\": 1,\n  \"locked\": false,\n  \"nickname\": \"My Sender ID\",\n  \"reply_to\": {\n    \"email\": \"replyto@example.com\",\n    \"name\": \"Example INC\"\n  },\n  \"state\": \"Colorado\",\n  \"updated_at\": 1449872165,\n  \"verified\": true,\n  \"zip\": \"80202\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Update a Sender Identity",
      "method": "patch",
      "endpoint": "senders/:sender_id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"address\": \"123 Elm St.\",\n  \"address_2\": \"Apt. 456\",\n  \"city\": \"Denver\",\n  \"country\": \"United States\",\n  \"created_at\": 1449872165,\n  \"from\": {\n    \"email\": \"from@example.com\",\n    \"name\": \"Example INC\"\n  },\n  \"id\": 1,\n  \"locked\": false,\n  \"nickname\": \"My Sender ID\",\n  \"reply_to\": {\n    \"email\": \"replyto@example.com\",\n    \"name\": \"Example INC\"\n  },\n  \"state\": \"Colorado\",\n  \"updated_at\": 1449872165,\n  \"verified\": true,\n  \"zip\": \"80202\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Resend Sender Identity Verification",
      "method": "post",
      "endpoint": "senders/:sender_id/resend_verification",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Create an SSO Certificate",
      "method": "post",
      "endpoint": "sso/certificates",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"id\": 66138975,\n  \"intergration_id\": \"b0b98502-9408-4b24-9e3d-31ed7cb15312\",\n  \"not_after\": 1621289880,\n  \"not_before\": 1621289880,\n  \"public_certificate\": \"<your x509 certificate>\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 429,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete an SSO Certificate",
      "method": "delete",
      "endpoint": "sso/certificates/:cert_id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"id\": 66138975,\n  \"intergration_id\": \"b0b98502-9408-4b24-9e3d-31ed7cb15312\",\n  \"not_after\": 1621289880,\n  \"not_before\": 1621289880,\n  \"public_certificate\": \"<your x509 certificate>\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 429,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Get an SSO Certificate",
      "method": "get",
      "endpoint": "sso/certificates/:cert_id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"id\": 66138975,\n  \"intergration_id\": \"b0b98502-9408-4b24-9e3d-31ed7cb15312\",\n  \"not_after\": 1621289880,\n  \"not_before\": 1621289880,\n  \"public_certificate\": \"<your x509 certificate>\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 429,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Update SSO Certificate",
      "method": "patch",
      "endpoint": "sso/certificates/:cert_id",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 429,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Get All SSO Integrations",
      "method": "get",
      "endpoint": "sso/integrations",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  {\n    \"completed_integration\": {{faker 'random.boolean'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"entity_id\": \"\",\n    \"name\": \"\",\n    \"signin_url\": \"\",\n    \"signout_url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 429,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Create an SSO Integration",
      "method": "post",
      "endpoint": "sso/integrations",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"completed_integration\": {{faker 'random.boolean'}},\n  \"enabled\": {{faker 'random.boolean'}},\n  \"entity_id\": \"\",\n  \"name\": \"\",\n  \"signin_url\": \"\",\n  \"signout_url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 429,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete an SSO Integration",
      "method": "delete",
      "endpoint": "sso/integrations/:id",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 429,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Get an SSO Integration",
      "method": "get",
      "endpoint": "sso/integrations/:id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"completed_integration\": {{faker 'random.boolean'}},\n  \"enabled\": {{faker 'random.boolean'}},\n  \"entity_id\": \"\",\n  \"name\": \"\",\n  \"signin_url\": \"\",\n  \"signout_url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 429,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Update an SSO Integration",
      "method": "patch",
      "endpoint": "sso/integrations/:id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"completed_integration\": {{faker 'random.boolean'}},\n  \"enabled\": {{faker 'random.boolean'}},\n  \"entity_id\": \"\",\n  \"name\": \"\",\n  \"signin_url\": \"\",\n  \"signout_url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 429,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Get All SSO Certificates by Integration",
      "method": "get",
      "endpoint": "sso/integrations/:integration_id/certificates",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  {\n    \"id\": 66138975,\n    \"intergration_id\": \"b0b98502-9408-4b24-9e3d-31ed7cb15312\",\n    \"not_after\": 1621289880,\n    \"not_before\": 1621289880,\n    \"public_certificate\": \"<your x509 certificate>\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 429,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Create SSO Teammate",
      "method": "post",
      "endpoint": "sso/teammates",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"email\": \"{{faker 'internet.email'}}\",\n  \"first_name\": \"\",\n  \"is_admin\": {{faker 'random.boolean'}},\n  \"is_read_only\": {{faker 'random.boolean'}},\n  \"last_name\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 429,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Edit an SSO Teammate",
      "method": "patch",
      "endpoint": "sso/teammates/:username",
      "responses": [
        {
          "uuid": "",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 429,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "[\n  {\n    \"error_id\": \"\",\n    \"field\": \"\",\n    \"message\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve global email statistics",
      "method": "get",
      "endpoint": "stats",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  {\n    \"date\": \"\",\n    \"stats\": [\n      {\n        \"metrics\": \"\"\n      }\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "List all Subusers",
      "method": "get",
      "endpoint": "subusers",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  {\n    \"disabled\": false,\n    \"email\": \"example@example.com\",\n    \"id\": 1234,\n    \"username\": \"example_subuser\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unexpected error in API call. See HTTP response body for details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Create Subuser",
      "method": "post",
      "endpoint": "subusers",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"authorization_token\": \"\",\n  \"credit_allocation\": {\n    \"type\": \"unlimited\"\n  },\n  \"email\": \"example@example.com\",\n  \"signup_session_token\": \"\",\n  \"user_id\": 1234,\n  \"username\": \"example_subuser\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve Subuser Reputations",
      "method": "get",
      "endpoint": "subusers/reputations",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  {\n    \"reputation\": {{faker 'random.number'}},\n    \"username\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve email statistics for your subusers.",
      "method": "get",
      "endpoint": "subusers/stats",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"date\": \"2015-01-01T00:00:00.000Z\",\n  \"stats\": [\n    {\n      \"metrics\": {\n        \"blocks\": 0,\n        \"bounce_drops\": 0,\n        \"bounces\": 0,\n        \"clicks\": 0,\n        \"deferred\": 0,\n        \"delivered\": 0,\n        \"invalid_emails\": 0,\n        \"opens\": 0,\n        \"processed\": 0,\n        \"requests\": 0,\n        \"spam_report_drops\": 0,\n        \"spam_reports\": 0,\n        \"unique_clicks\": 0,\n        \"unique_opens\": 0,\n        \"unsubscribe_drops\": 0,\n        \"unsubscribes\": 0\n      },\n      \"name\": \"cat1\",\n      \"type\": \"category\"\n    },\n    {\n      \"metrics\": {\n        \"blocks\": 0,\n        \"bounce_drops\": 0,\n        \"bounces\": 0,\n        \"clicks\": 0,\n        \"deferred\": 0,\n        \"delivered\": 0,\n        \"invalid_emails\": 0,\n        \"opens\": 0,\n        \"processed\": 0,\n        \"requests\": 0,\n        \"spam_report_drops\": 0,\n        \"spam_reports\": 0,\n        \"unique_clicks\": 0,\n        \"unique_opens\": 0,\n        \"unsubscribe_drops\": 0,\n        \"unsubscribes\": 0\n      },\n      \"name\": \"cat2\",\n      \"type\": \"category\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve monthly stats for all subusers",
      "method": "get",
      "endpoint": "subusers/stats/monthly",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"date\": \"2016-02-01T00:00:00.000Z\",\n  \"stats\": [\n    {\n      \"first_name\": \"John\",\n      \"last_name\": \"Doe\",\n      \"metrics\": {\n        \"blocks\": 0,\n        \"bounce_drops\": 0,\n        \"bounces\": 0,\n        \"clicks\": 5,\n        \"deferred\": 0,\n        \"delivered\": 0,\n        \"invalid_emails\": 0,\n        \"opens\": 10,\n        \"processed\": 10,\n        \"requests\": 10,\n        \"spam_report_drops\": 0,\n        \"spam_reports\": 0,\n        \"unique_clicks\": 0,\n        \"unique_opens\": 0,\n        \"unsubscribe_drops\": 0,\n        \"unsubscribes\": 0\n      },\n      \"name\": \"user1\",\n      \"type\": \"subuser\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve the totals for each email statistic metric for all subusers.",
      "method": "get",
      "endpoint": "subusers/stats/sums",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"date\": \"2015-01-01T00:00:00.000Z\",\n  \"stats\": [\n    {\n      \"metrics\": {\n        \"blocks\": 0,\n        \"bounce_drops\": 0,\n        \"bounces\": 0,\n        \"clicks\": 0,\n        \"deferred\": 0,\n        \"delivered\": 0,\n        \"invalid_emails\": 0,\n        \"opens\": 0,\n        \"processed\": 0,\n        \"requests\": 0,\n        \"spam_report_drops\": 0,\n        \"spam_reports\": 0,\n        \"unique_clicks\": 0,\n        \"unique_opens\": 0,\n        \"unsubscribe_drops\": 0,\n        \"unsubscribes\": 0\n      },\n      \"name\": \"cat1\",\n      \"type\": \"category\"\n    },\n    {\n      \"metrics\": {\n        \"blocks\": 0,\n        \"bounce_drops\": 0,\n        \"bounces\": 0,\n        \"clicks\": 0,\n        \"deferred\": 0,\n        \"delivered\": 0,\n        \"invalid_emails\": 0,\n        \"opens\": 0,\n        \"processed\": 0,\n        \"requests\": 0,\n        \"spam_report_drops\": 0,\n        \"spam_reports\": 0,\n        \"unique_clicks\": 0,\n        \"unique_opens\": 0,\n        \"unsubscribe_drops\": 0,\n        \"unsubscribes\": 0\n      },\n      \"name\": \"cat2\",\n      \"type\": \"category\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete a subuser",
      "method": "delete",
      "endpoint": "subusers/:subuser_name",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Enable/disable a subuser",
      "method": "patch",
      "endpoint": "subusers/:subuser_name",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Update IPs assigned to a subuser",
      "method": "put",
      "endpoint": "subusers/:subuser_name/ips",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ips\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete monitor settings",
      "method": "delete",
      "endpoint": "subusers/:subuser_name/monitor",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve monitor settings for a subuser",
      "method": "get",
      "endpoint": "subusers/:subuser_name/monitor",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"email\": \"example@example.com\",\n  \"frequency\": 50000\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Create monitor settings",
      "method": "post",
      "endpoint": "subusers/:subuser_name/monitor",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"email\": \"example@example.com\",\n  \"frequency\": 50000\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Update Monitor Settings for a subuser",
      "method": "put",
      "endpoint": "subusers/:subuser_name/monitor",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"email\": \"example@example.com\",\n  \"frequency\": 50000\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve the monthly email statistics for a single subuser",
      "method": "get",
      "endpoint": "subusers/:subuser_name/stats/monthly",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"date\": \"2016-02-01T00:00:00.000Z\",\n  \"stats\": [\n    {\n      \"first_name\": \"John\",\n      \"last_name\": \"Doe\",\n      \"metrics\": {\n        \"blocks\": 0,\n        \"bounce_drops\": 0,\n        \"bounces\": 0,\n        \"clicks\": 5,\n        \"deferred\": 0,\n        \"delivered\": 0,\n        \"invalid_emails\": 0,\n        \"opens\": 10,\n        \"processed\": 10,\n        \"requests\": 10,\n        \"spam_report_drops\": 0,\n        \"spam_reports\": 0,\n        \"unique_clicks\": 0,\n        \"unique_opens\": 0,\n        \"unsubscribe_drops\": 0,\n        \"unsubscribes\": 0\n      },\n      \"name\": \"user1\",\n      \"type\": \"subuser\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete blocks",
      "method": "delete",
      "endpoint": "suppression/blocks",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve all blocks",
      "method": "get",
      "endpoint": "suppression/blocks",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  {\n    \"created\": 1443651154,\n    \"email\": \"example@example.com\",\n    \"reason\": \"error dialing remote address: dial tcp 10.57.152.165:25: no route to host\",\n    \"status\": \"4.0.0\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete a specific block",
      "method": "delete",
      "endpoint": "suppression/blocks/:email",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve a specific block",
      "method": "get",
      "endpoint": "suppression/blocks/:email",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  {\n    \"created\": 1443651154,\n    \"email\": \"example@example.com\",\n    \"reason\": \"error dialing remote address: dial tcp 10.57.152.165:25: no route to host\",\n    \"status\": \"4.0.0\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete bounces",
      "method": "delete",
      "endpoint": "suppression/bounces",
      "responses": [
        {
          "uuid": "",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve all bounces",
      "method": "get",
      "endpoint": "suppression/bounces",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  {\n    \"created\": 1250337600,\n    \"email\": \"example@example.com\",\n    \"reason\": \"550 5.1.1 The email account that you tried to reach does not exist. Please try double-checking the recipient's email address for typos or unnecessary spaces. Learn more at  https://support.google.com/mail/answer/6596 o186si2389584ioe.63 - gsmtp \",\n    \"status\": \"5.1.1\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete a bounce",
      "method": "delete",
      "endpoint": "suppression/bounces/:email",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve a Bounce",
      "method": "get",
      "endpoint": "suppression/bounces/:email",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  {\n    \"created\": 1250337600,\n    \"email\": \"example@example.com\",\n    \"reason\": \"550 5.1.1 The email account that you tried to reach does not exist. Please try double-checking the recipient's email address for typos or unnecessary spaces. Learn more at  https://support.google.com/mail/answer/6596 o186si2389584ioe.63 - gsmtp \",\n    \"status\": \"5.1.1\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete invalid emails",
      "method": "delete",
      "endpoint": "suppression/invalid_emails",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve all invalid emails",
      "method": "get",
      "endpoint": "suppression/invalid_emails",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  {\n    \"created\": 1620141015,\n    \"email\": \"invalid@example.com\",\n    \"reason\": \"Mail domain mentioned in email address is unknown\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete a specific invalid email",
      "method": "delete",
      "endpoint": "suppression/invalid_emails/:email",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve a specific invalid email",
      "method": "get",
      "endpoint": "suppression/invalid_emails/:email",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  {\n    \"created\": 1620141015,\n    \"email\": \"invalid@example.com\",\n    \"reason\": \"Mail domain mentioned in email address is unknown\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete spam reports",
      "method": "delete",
      "endpoint": "suppression/spam_reports",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve all spam reports",
      "method": "get",
      "endpoint": "suppression/spam_reports",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  {\n    \"created\": 1443651141,\n    \"email\": \"user1@example.com\",\n    \"ip\": \"10.63.202.100\"\n  },\n  {\n    \"created\": 1443651154,\n    \"email\": \"user2@example.com\",\n    \"ip\": \"10.63.202.100\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete a specific spam report",
      "method": "delete",
      "endpoint": "suppression/spam_reports/:email",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve a specific spam report",
      "method": "get",
      "endpoint": "suppression/spam_reports/:email",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  {\n    \"created\": 1443651141,\n    \"email\": \"user1@example.com\",\n    \"ip\": \"10.63.202.100\"\n  },\n  {\n    \"created\": 1443651154,\n    \"email\": \"user2@example.com\",\n    \"ip\": \"10.63.202.100\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve all global suppressions",
      "method": "get",
      "endpoint": "suppression/unsubscribes",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  {\n    \"created\": {{faker 'random.number'}},\n    \"email\": \"{{faker 'internet.email'}}\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve all teammates",
      "method": "get",
      "endpoint": "teammates",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"result\": [\n    {\n      \"address\": \"\",\n      \"address2\": \"\",\n      \"city\": \"\",\n      \"country\": \"\",\n      \"email\": \"\",\n      \"first_name\": \"\",\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"last_name\": \"\",\n      \"phone\": \"\",\n      \"state\": \"\",\n      \"user_type\": \"{{oneOf (array 'admin' 'owner' 'teammate')}}\",\n      \"username\": \"\",\n      \"website\": \"\",\n      \"zip\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Invite teammate",
      "method": "post",
      "endpoint": "teammates",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"email\": \"\",\n  \"is_admin\": {{faker 'random.boolean'}},\n  \"scopes\": [\n    \"\"\n  ],\n  \"token\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve all pending teammates",
      "method": "get",
      "endpoint": "teammates/pending",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"result\": [\n    {\n      \"email\": \"\",\n      \"expiration_date\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"scopes\": [\n        \"\"\n      ],\n      \"token\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete pending teammate",
      "method": "delete",
      "endpoint": "teammates/pending/:token",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Resend teammate invite",
      "method": "post",
      "endpoint": "teammates/pending/:token/resend",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"email\": \"\",\n  \"is_admin\": {{faker 'random.boolean'}},\n  \"scopes\": [\n    \"\"\n  ],\n  \"token\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete teammate",
      "method": "delete",
      "endpoint": "teammates/:username",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve specific teammate",
      "method": "get",
      "endpoint": "teammates/:username",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"address\": \"\",\n  \"address2\": \"\",\n  \"city\": \"\",\n  \"country\": \"\",\n  \"email\": \"\",\n  \"first_name\": \"\",\n  \"is_admin\": {{faker 'random.boolean'}},\n  \"last_name\": \"\",\n  \"phone\": \"\",\n  \"scopes\": [\n    \"\"\n  ],\n  \"state\": \"\",\n  \"user_type\": \"{{oneOf (array 'admin' 'owner' 'teammate')}}\",\n  \"username\": \"\",\n  \"website\": \"\",\n  \"zip\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Update teammate's permissions",
      "method": "patch",
      "endpoint": "teammates/:username",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"address\": \"\",\n  \"address2\": \"\",\n  \"city\": \"\",\n  \"country\": \"\",\n  \"email\": \"\",\n  \"first_name\": \"\",\n  \"is_admin\": {{faker 'random.boolean'}},\n  \"last_name\": \"\",\n  \"phone\": \"\",\n  \"scopes\": [\n    \"\"\n  ],\n  \"state\": \"\",\n  \"user_type\": \"{{oneOf (array 'admin' 'owner' 'teammate')}}\",\n  \"username\": \"\",\n  \"website\": \"\",\n  \"zip\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve paged transactional templates.",
      "method": "get",
      "endpoint": "templates",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"_metadata\": {\n    \"count\": {{faker 'random.number'}},\n    \"next\": \"\",\n    \"prev\": \"\",\n    \"self\": \"\"\n  },\n  \"result\": [\n    {\n      \"generation\": \"legacy\",\n      \"id\": \"0c314114-a2b7-4523-8cbc-a293d7d19007\",\n      \"name\": \"example_name\",\n      \"updated_at \": \"2021-04-28T13:12:46.000Z\",\n      \"versions\": []\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"\": \"\",\n      \"error_id\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Create a transactional template.",
      "method": "post",
      "endpoint": "templates",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"generation\": \"legacy\",\n  \"id\": \"33feeff2-5069-43fe-8853-428651e5be79\",\n  \"name\": \"example_name\",\n  \"updated_at \": \"2021-04-28T13:12:46.000Z\",\n  \"warning\": {\n    \"message\": \"Sample warning message\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete a template.",
      "method": "delete",
      "endpoint": "templates/:template_id",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve a single transactional template.",
      "method": "get",
      "endpoint": "templates/:template_id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"generation\": \"legacy\",\n  \"id\": \"33feeff2-5069-43fe-8853-428651e5be79\",\n  \"name\": \"example_name\",\n  \"updated_at \": \"2021-04-28T13:12:46.000Z\",\n  \"warning\": {\n    \"message\": \"Sample warning message\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Edit a transactional template.",
      "method": "patch",
      "endpoint": "templates/:template_id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"generation\": \"legacy\",\n  \"id\": \"33feeff2-5069-43fe-8853-428651e5be79\",\n  \"name\": \"example_name\",\n  \"updated_at \": \"2021-04-28T13:12:46.000Z\",\n  \"warning\": {\n    \"message\": \"Sample warning message\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Duplicate a transactional template.",
      "method": "post",
      "endpoint": "templates/:template_id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"generation\": \"legacy\",\n  \"id\": \"33feeff2-5069-43fe-8853-428651e5be79\",\n  \"name\": \"example_name\",\n  \"updated_at \": \"2021-04-28T13:12:46.000Z\",\n  \"warning\": {\n    \"message\": \"Sample warning message\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Create a new transactional template version.",
      "method": "post",
      "endpoint": "templates/:template_id/versions",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"warnings\": [\n    {\n      \"message\": \"A sample warning message.\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete a transactional template version.",
      "method": "delete",
      "endpoint": "templates/:template_id/versions/:version_id",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve a specific transactional template version.",
      "method": "get",
      "endpoint": "templates/:template_id/versions/:version_id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"warnings\": [\n    {\n      \"message\": \"A sample warning message.\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Edit a transactional template version.",
      "method": "patch",
      "endpoint": "templates/:template_id/versions/:version_id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"warnings\": [\n    {\n      \"message\": \"A sample warning message.\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Activate a transactional template version.",
      "method": "post",
      "endpoint": "templates/:template_id/versions/:version_id/activate",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"warnings\": [\n    {\n      \"message\": \"A sample warning message.\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve Tracking Settings",
      "method": "get",
      "endpoint": "tracking_settings",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"result\": [\n    {\n      \"description\": \"\",\n      \"enabled\": {{faker 'random.boolean'}},\n      \"name\": \"\",\n      \"title\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve Click Track Settings",
      "method": "get",
      "endpoint": "tracking_settings/click",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"enable_text\": false,\n  \"enabled\": false\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Update Click Tracking Settings",
      "method": "patch",
      "endpoint": "tracking_settings/click",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"enable_text\": false,\n  \"enabled\": false\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve Google Analytics Settings",
      "method": "get",
      "endpoint": "tracking_settings/google_analytics",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"enabled\": true,\n  \"utm_campaign\": \"website\",\n  \"utm_content\": \"\",\n  \"utm_medium\": \"email\",\n  \"utm_source\": \"sendgrid.com\",\n  \"utm_term\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Update Google Analytics Settings",
      "method": "patch",
      "endpoint": "tracking_settings/google_analytics",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"enabled\": true,\n  \"utm_campaign\": \"website\",\n  \"utm_content\": \"\",\n  \"utm_medium\": \"email\",\n  \"utm_source\": \"sendgrid.com\",\n  \"utm_term\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Get Open Tracking Settings",
      "method": "get",
      "endpoint": "tracking_settings/open",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"enabled\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Update Open Tracking Settings",
      "method": "patch",
      "endpoint": "tracking_settings/open",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"enabled\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve Subscription Tracking Settings",
      "method": "get",
      "endpoint": "tracking_settings/subscription",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"enabled\": {{faker 'random.boolean'}},\n  \"html_content\": \"\",\n  \"landing\": \"\",\n  \"plain_content\": \"\",\n  \"replace\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Update Subscription Tracking Settings",
      "method": "patch",
      "endpoint": "tracking_settings/subscription",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"enabled\": {{faker 'random.boolean'}},\n  \"html_content\": \"\",\n  \"landing\": \"\",\n  \"plain_content\": \"\",\n  \"replace\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Get a user's account information.",
      "method": "get",
      "endpoint": "user/account",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"reputation\": {{faker 'random.number'}},\n  \"type\": \"{{oneOf (array 'free' 'paid')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve your credit balance",
      "method": "get",
      "endpoint": "user/credits",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"last_reset\": \"\",\n  \"next_reset\": \"\",\n  \"overage\": {{faker 'random.number'}},\n  \"remain\": {{faker 'random.number'}},\n  \"reset_frequency\": \"\",\n  \"total\": {{faker 'random.number'}},\n  \"used\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve your account email address",
      "method": "get",
      "endpoint": "user/email",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"email\": \"{{faker 'internet.email'}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Update your account email address",
      "method": "put",
      "endpoint": "user/email",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"email\": \"{{faker 'internet.email'}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Update your password",
      "method": "put",
      "endpoint": "user/password",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Get a user's profile",
      "method": "get",
      "endpoint": "user/profile",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"address\": \"\",\n  \"address2\": \"\",\n  \"city\": \"\",\n  \"company\": \"\",\n  \"country\": \"\",\n  \"first_name\": \"\",\n  \"last_name\": \"\",\n  \"phone\": \"\",\n  \"state\": \"\",\n  \"website\": \"\",\n  \"zip\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Update a user's profile",
      "method": "patch",
      "endpoint": "user/profile",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"address\": \"1451 Larimer Street, 3rd floor\",\n  \"address2\": \"\",\n  \"city\": \"Denver, CO\",\n  \"company\": \"SendGrid\",\n  \"country\": \"US\",\n  \"first_name\": \"Matthew\",\n  \"last_name\": \"Bernier\",\n  \"phone\": \"7208788003\",\n  \"state\": \"CO\",\n  \"website\": \"http://sendgrid.com\",\n  \"zip\": \"80202\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve all scheduled sends",
      "method": "get",
      "endpoint": "user/scheduled_sends",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  {\n    \"batch_id\": \"HkJ5yLYULb7Rj8GKSx7u025ouWVlMgAi\",\n    \"status\": \"pause\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"help\": {},\n      \"message\": \"\"\n    }\n  ],\n  \"id\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Cancel or pause a scheduled send",
      "method": "post",
      "endpoint": "user/scheduled_sends",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"batch_id\": \"HkJ5yLYULb7Rj8GKSx7u025ouWVlMgAi\",\n  \"status\": \"pause\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"help\": {},\n      \"message\": \"\"\n    }\n  ],\n  \"id\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete a cancellation or pause from a scheduled send",
      "method": "delete",
      "endpoint": "user/scheduled_sends/:batch_id",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"help\": {},\n      \"message\": \"\"\n    }\n  ],\n  \"id\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve scheduled send",
      "method": "get",
      "endpoint": "user/scheduled_sends/:batch_id",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  {\n    \"batch_id\": \"HkJ5yLYULb7Rj8GKSx7u025ouWVlMgAi\",\n    \"status\": \"pause\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"help\": {},\n      \"message\": \"\"\n    }\n  ],\n  \"id\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Update a scheduled send",
      "method": "patch",
      "endpoint": "user/scheduled_sends/:batch_id",
      "responses": [
        {
          "uuid": "",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"help\": {},\n      \"message\": \"\"\n    }\n  ],\n  \"id\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve current Enforced TLS settings.",
      "method": "get",
      "endpoint": "user/settings/enforced_tls",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"require_tls\": true,\n  \"require_valid_cert\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Update Enforced TLS settings",
      "method": "patch",
      "endpoint": "user/settings/enforced_tls",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"require_tls\": true,\n  \"require_valid_cert\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve your username",
      "method": "get",
      "endpoint": "user/username",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"user_id\": {{faker 'random.number'}},\n  \"username\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Update your username",
      "method": "put",
      "endpoint": "user/username",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"username\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve Event Webhook settings",
      "method": "get",
      "endpoint": "user/webhooks/event/settings",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"bounce\": {{faker 'random.boolean'}},\n  \"click\": {{faker 'random.boolean'}},\n  \"deferred\": {{faker 'random.boolean'}},\n  \"delivered\": {{faker 'random.boolean'}},\n  \"dropped\": {{faker 'random.boolean'}},\n  \"enabled\": {{faker 'random.boolean'}},\n  \"group_resubscribe\": {{faker 'random.boolean'}},\n  \"group_unsubscribe\": {{faker 'random.boolean'}},\n  \"oauth_client_id\": \"\",\n  \"oauth_token_url\": \"\",\n  \"open\": {{faker 'random.boolean'}},\n  \"processed\": {{faker 'random.boolean'}},\n  \"spam_report\": {{faker 'random.boolean'}},\n  \"unsubscribe\": {{faker 'random.boolean'}},\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Update Event Notification Settings",
      "method": "patch",
      "endpoint": "user/webhooks/event/settings",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"bounce\": {{faker 'random.boolean'}},\n  \"click\": {{faker 'random.boolean'}},\n  \"deferred\": {{faker 'random.boolean'}},\n  \"delivered\": {{faker 'random.boolean'}},\n  \"dropped\": {{faker 'random.boolean'}},\n  \"enabled\": {{faker 'random.boolean'}},\n  \"group_resubscribe\": {{faker 'random.boolean'}},\n  \"group_unsubscribe\": {{faker 'random.boolean'}},\n  \"oauth_client_id\": \"\",\n  \"oauth_token_url\": \"\",\n  \"open\": {{faker 'random.boolean'}},\n  \"processed\": {{faker 'random.boolean'}},\n  \"spam_report\": {{faker 'random.boolean'}},\n  \"unsubscribe\": {{faker 'random.boolean'}},\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve Signed Webhook Public Key",
      "method": "get",
      "endpoint": "user/webhooks/event/settings/signed",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"public_key\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Enable/Disable Signed Webhook",
      "method": "patch",
      "endpoint": "user/webhooks/event/settings/signed",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"public_key\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Test Event Notification Settings",
      "method": "post",
      "endpoint": "user/webhooks/event/test",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve all parse settings",
      "method": "get",
      "endpoint": "user/webhooks/parse/settings",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"result\": [\n    {\n      \"hostname\": \"myhostname.com\",\n      \"send_raw\": true,\n      \"spam_check\": false,\n      \"url\": \"http://email.myhostname.com\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Create a parse setting",
      "method": "post",
      "endpoint": "user/webhooks/parse/settings",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"hostname\": \"myhostname.com\",\n  \"send_raw\": true,\n  \"spam_check\": false,\n  \"url\": \"http://email.myhostname.com\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete a parse setting",
      "method": "delete",
      "endpoint": "user/webhooks/parse/settings/:hostname",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve a specific parse setting",
      "method": "get",
      "endpoint": "user/webhooks/parse/settings/:hostname",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"hostname\": \"myhostname.com\",\n  \"send_raw\": true,\n  \"spam_check\": false,\n  \"url\": \"http://email.myhostname.com\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Update a parse setting",
      "method": "patch",
      "endpoint": "user/webhooks/parse/settings/:hostname",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"hostname\": \"myhostname.com\",\n  \"send_raw\": true,\n  \"spam_check\": false,\n  \"url\": \"http://email.myhostname.com\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieves Inbound Parse Webhook statistics.",
      "method": "get",
      "endpoint": "user/webhooks/parse/stats",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  {\n    \"date\": \"\",\n    \"stats\": [\n      {\n        \"metrics\": {\n          \"received\": {{faker 'random.number'}}\n        }\n      }\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Validate an email",
      "method": "post",
      "endpoint": "validations/email",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"result\": {\n    \"checks\": {\n      \"additional\": {\n        \"has_known_bounces\": {{faker 'random.boolean'}},\n        \"has_suspected_bounces\": {{faker 'random.boolean'}}\n      },\n      \"domain\": {\n        \"has_mx_or_a_record\": {{faker 'random.boolean'}},\n        \"has_valid_address_syntax\": {{faker 'random.boolean'}},\n        \"is_suspected_disposable_address\": {{faker 'random.boolean'}}\n      },\n      \"local_part\": {\n        \"is_suspected_role_address\": {{faker 'random.boolean'}}\n      }\n    },\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"host\": \"\",\n    \"ip_address\": \"\",\n    \"local\": \"\",\n    \"score\": {{faker 'random.number'}},\n    \"source\": \"\",\n    \"suggestion\": \"\",\n    \"verdict\": \"{{oneOf (array 'Valid' 'Risky' 'Invalid')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Get All Verified Senders",
      "method": "get",
      "endpoint": "verified_senders",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"results\": [\n    {\n      \"address\": \"1234 Fake St.\",\n      \"address2\": \"PO Box 1234\",\n      \"city\": \"San Francisco\",\n      \"country\": \"USA\",\n      \"from_email\": \"orders@example.com\",\n      \"from_name\": \"Example Orders\",\n      \"id\": 1234,\n      \"locked\": false,\n      \"nickname\": \"Example Orders\",\n      \"reply_to\": \"orders@example.com\",\n      \"reply_to_name\": \"Example Orders\",\n      \"state\": \"CA\",\n      \"verified\": true,\n      \"zip\": \"94105\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Create Verified Sender Request",
      "method": "post",
      "endpoint": "verified_senders",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"address\": \"1234 Fake St.\",\n  \"address2\": \"PO Box 1234\",\n  \"city\": \"San Francisco\",\n  \"country\": \"USA\",\n  \"from_email\": \"orders@example.com\",\n  \"from_name\": \"Example Orders\",\n  \"id\": 1234,\n  \"locked\": false,\n  \"nickname\": \"Example Orders\",\n  \"reply_to\": \"orders@example.com\",\n  \"reply_to_name\": \"Example Orders\",\n  \"state\": \"CA\",\n  \"verified\": true,\n  \"zip\": \"94105\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Domain Warn List",
      "method": "get",
      "endpoint": "verified_senders/domains",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"results\": {\n    \"hard_failures\": [\n      \"\"\n    ],\n    \"soft_failures\": [\n      \"\"\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Resend Verified Sender Request",
      "method": "post",
      "endpoint": "verified_senders/resend/:id",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Completed Steps",
      "method": "get",
      "endpoint": "verified_senders/steps_completed",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"results\": {\n    \"domain_verified\": {{faker 'random.boolean'}},\n    \"sender_verified\": {{faker 'random.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Verify Sender Request",
      "method": "get",
      "endpoint": "verified_senders/verify/:token",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete Verified Sender",
      "method": "delete",
      "endpoint": "verified_senders/:id",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Edit Verified Sender",
      "method": "patch",
      "endpoint": "verified_senders/:id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"address\": \"1234 Fake St.\",\n  \"address2\": \"PO Box 1234\",\n  \"city\": \"San Francisco\",\n  \"country\": \"USA\",\n  \"from_email\": \"orders@example.com\",\n  \"from_name\": \"Example Orders\",\n  \"id\": 1234,\n  \"locked\": false,\n  \"nickname\": \"Example Orders\",\n  \"reply_to\": \"orders@example.com\",\n  \"reply_to_name\": \"Example Orders\",\n  \"state\": \"CA\",\n  \"verified\": true,\n  \"zip\": \"94105\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"field\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"field_name\",\n      \"message\": \"error message\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"error_id\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Email DNS records to a co-worker",
      "method": "post",
      "endpoint": "whitelabel/dns/email",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": {\n    \"error\": \"\",\n    \"field\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "List all authenticated domains",
      "method": "get",
      "endpoint": "whitelabel/domains",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  {\n    \"automatic_security\": true,\n    \"custom_spf\": true,\n    \"default\": true,\n    \"dns\": {\n      \"dkim1\": {\n        \"data\": \"s1._domainkey.u7.wl.sendgrid.net\",\n        \"host\": \"s1._domainkey.example.com\",\n        \"type\": \"cname\",\n        \"valid\": true\n      },\n      \"dkim2\": {\n        \"data\": \"s2._domainkey.u7.wl.sendgrid.net\",\n        \"host\": \"s2._domainkey.example.com\",\n        \"type\": \"cname\",\n        \"valid\": true\n      },\n      \"mail_cname\": {\n        \"data\": \"u7.wl.sendgrid.net\",\n        \"host\": \"mail.example.com\",\n        \"type\": \"cname\",\n        \"valid\": true\n      }\n    },\n    \"domain\": \"example.com\",\n    \"id\": 1,\n    \"ips\": [\n      \"192.168.1.1\",\n      \"192.168.1.2\"\n    ],\n    \"legacy\": false,\n    \"subdomain\": \"mail\",\n    \"user_id\": 7,\n    \"username\": \"jane@example.com\",\n    \"valid\": true\n  },\n  {\n    \"automatic_security\": true,\n    \"custom_spf\": false,\n    \"default\": true,\n    \"dns\": {\n      \"dkim1\": {\n        \"data\": \"k=rsa; t=s; p=publicKey\",\n        \"host\": \"example2.com\",\n        \"type\": \"txt\",\n        \"valid\": false\n      },\n      \"dkim2\": {\n        \"data\": \"k=rsa; t=s p=publicKey\",\n        \"host\": \"example2.com\",\n        \"type\": \"txt\",\n        \"valid\": false\n      },\n      \"mail_cname\": {\n        \"data\": \"sendgrid.net\",\n        \"host\": \"news.example2.com\",\n        \"type\": \"mx\",\n        \"valid\": false\n      }\n    },\n    \"domain\": \"example2.com\",\n    \"id\": 2,\n    \"ips\": [],\n    \"legacy\": false,\n    \"subdomain\": \"new\",\n    \"user_id\": 8,\n    \"username\": \"john@example2.com\",\n    \"valid\": false\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Authenticate a domain",
      "method": "post",
      "endpoint": "whitelabel/domains",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"automatic_security\": true,\n  \"custom_spf\": false,\n  \"default\": true,\n  \"dns\": {\n    \"dkim1\": {\n      \"data\": \"s1._domainkey.u7.wl.sendgrid.net\",\n      \"host\": \"s1._domainkey.example.com\",\n      \"type\": \"cname\",\n      \"valid\": true\n    },\n    \"dkim2\": {\n      \"data\": \"s2._domainkey.u7.wl.sendgrid.net\",\n      \"host\": \"s2._domainkey.example.com\",\n      \"type\": \"cname\",\n      \"valid\": true\n    },\n    \"mail_cname\": {\n      \"data\": \"u7.wl.sendgrid.net\",\n      \"host\": \"mail.example.com\",\n      \"type\": \"cname\",\n      \"valid\": true\n    }\n  },\n  \"domain\": \"example.com\",\n  \"id\": 45373692,\n  \"ips\": [\n    \"127.0.0.1\"\n  ],\n  \"legacy\": false,\n  \"subdomain\": \"sub\",\n  \"user_id\": 66036447,\n  \"username\": \"jdoe\",\n  \"valid\": true\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Get the default authentication",
      "method": "get",
      "endpoint": "whitelabel/domains/default",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  {\n    \"automatic_security\": true,\n    \"custom_spf\": true,\n    \"default\": true,\n    \"dns\": {\n      \"dkim1\": {\n        \"data\": \"s1._domainkey.u7.wl.sendgrid.net\",\n        \"host\": \"s1._domainkey.example.com\",\n        \"type\": \"cname\",\n        \"valid\": true\n      },\n      \"dkim2\": {\n        \"data\": \"s2._domainkey.u7.wl.sendgrid.net\",\n        \"host\": \"s2._domainkey.example.com\",\n        \"type\": \"cname\",\n        \"valid\": true\n      },\n      \"mail_cname\": {\n        \"data\": \"u7.wl.sendgrid.net\",\n        \"host\": \"mail.example.com\",\n        \"type\": \"cname\",\n        \"valid\": true\n      }\n    },\n    \"domain\": \"example.com\",\n    \"id\": 1,\n    \"ips\": [\n      \"192.168.1.1\",\n      \"192.168.1.2\"\n    ],\n    \"legacy\": false,\n    \"subdomain\": \"mail\",\n    \"user_id\": 7,\n    \"username\": \"jane@example.com\",\n    \"valid\": true\n  },\n  {\n    \"automatic_security\": true,\n    \"custom_spf\": false,\n    \"default\": true,\n    \"dns\": {\n      \"dkim1\": {\n        \"data\": \"k=rsa; t=s; p=publicKey\",\n        \"host\": \"example2.com\",\n        \"type\": \"txt\",\n        \"valid\": false\n      },\n      \"dkim2\": {\n        \"data\": \"k=rsa; t=s p=publicKey\",\n        \"host\": \"example2.com\",\n        \"type\": \"txt\",\n        \"valid\": false\n      },\n      \"mail_cname\": {\n        \"data\": \"sendgrid.net\",\n        \"host\": \"news.example2.com\",\n        \"type\": \"mx\",\n        \"valid\": false\n      }\n    },\n    \"domain\": \"example2.com\",\n    \"id\": 2,\n    \"ips\": [],\n    \"legacy\": false,\n    \"subdomain\": \"new\",\n    \"user_id\": 8,\n    \"username\": \"john@example2.com\",\n    \"valid\": false\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Disassociate an authenticated domain from a given user.",
      "method": "delete",
      "endpoint": "whitelabel/domains/subuser",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "List the authenticated domain associated with the given user.",
      "method": "get",
      "endpoint": "whitelabel/domains/subuser",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"automatic_security\": {{faker 'random.boolean'}},\n  \"custom_spf\": {{faker 'random.boolean'}},\n  \"default\": {{faker 'random.boolean'}},\n  \"dns\": {\n    \"dkim\": {\n      \"data\": \"\",\n      \"host\": \"\",\n      \"type\": \"\",\n      \"valid\": {{faker 'random.boolean'}}\n    },\n    \"domain_spf\": {\n      \"data\": \"\",\n      \"host\": \"\",\n      \"type\": \"\",\n      \"valid\": {{faker 'random.boolean'}}\n    },\n    \"mail_server\": {\n      \"data\": \"\",\n      \"host\": \"\",\n      \"type\": \"\",\n      \"valid\": {{faker 'random.boolean'}}\n    },\n    \"subdomain_spf\": {\n      \"data\": \"\",\n      \"host\": \"\",\n      \"type\": \"\",\n      \"valid\": {{faker 'random.boolean'}}\n    }\n  },\n  \"domain\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"ips\": [\n    \"\"\n  ],\n  \"legacy\": {{faker 'random.boolean'}},\n  \"subdomain\": \"\",\n  \"user_id\": {{faker 'random.number'}},\n  \"username\": \"\",\n  \"valid\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete an authenticated domain.",
      "method": "delete",
      "endpoint": "whitelabel/domains/:domain_id",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve an authenticated domain",
      "method": "get",
      "endpoint": "whitelabel/domains/:domain_id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"automatic_security\": true,\n  \"custom_spf\": false,\n  \"default\": true,\n  \"dns\": {\n    \"dkim1\": {\n      \"data\": \"s1._domainkey.u7.wl.sendgrid.net\",\n      \"host\": \"s1._domainkey.example.com\",\n      \"type\": \"cname\",\n      \"valid\": true\n    },\n    \"dkim2\": {\n      \"data\": \"s2._domainkey.u7.wl.sendgrid.net\",\n      \"host\": \"s2._domainkey.example.com\",\n      \"type\": \"cname\",\n      \"valid\": true\n    },\n    \"mail_cname\": {\n      \"data\": \"u7.wl.sendgrid.net\",\n      \"host\": \"mail.example.com\",\n      \"type\": \"cname\",\n      \"valid\": true\n    }\n  },\n  \"domain\": \"example.com\",\n  \"id\": 45373692,\n  \"ips\": [\n    \"127.0.0.1\"\n  ],\n  \"legacy\": false,\n  \"subdomain\": \"sub\",\n  \"user_id\": 66036447,\n  \"username\": \"jdoe\",\n  \"valid\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Update an authenticated domain",
      "method": "patch",
      "endpoint": "whitelabel/domains/:domain_id",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  {\n    \"automatic_security\": true,\n    \"custom_spf\": true,\n    \"default\": true,\n    \"dns\": {\n      \"dkim1\": {\n        \"data\": \"s1._domainkey.u7.wl.sendgrid.net\",\n        \"host\": \"s1._domainkey.example.com\",\n        \"type\": \"cname\",\n        \"valid\": true\n      },\n      \"dkim2\": {\n        \"data\": \"s2._domainkey.u7.wl.sendgrid.net\",\n        \"host\": \"s2._domainkey.example.com\",\n        \"type\": \"cname\",\n        \"valid\": true\n      },\n      \"mail_cname\": {\n        \"data\": \"u7.wl.sendgrid.net\",\n        \"host\": \"mail.example.com\",\n        \"type\": \"cname\",\n        \"valid\": true\n      }\n    },\n    \"domain\": \"example.com\",\n    \"id\": 1,\n    \"ips\": [\n      \"192.168.1.1\",\n      \"192.168.1.2\"\n    ],\n    \"legacy\": false,\n    \"subdomain\": \"mail\",\n    \"user_id\": 7,\n    \"username\": \"jane@example.com\",\n    \"valid\": true\n  },\n  {\n    \"automatic_security\": true,\n    \"custom_spf\": false,\n    \"default\": true,\n    \"dns\": {\n      \"dkim1\": {\n        \"data\": \"k=rsa; t=s; p=publicKey\",\n        \"host\": \"example2.com\",\n        \"type\": \"txt\",\n        \"valid\": false\n      },\n      \"dkim2\": {\n        \"data\": \"k=rsa; t=s p=publicKey\",\n        \"host\": \"example2.com\",\n        \"type\": \"txt\",\n        \"valid\": false\n      },\n      \"mail_cname\": {\n        \"data\": \"sendgrid.net\",\n        \"host\": \"news.example2.com\",\n        \"type\": \"mx\",\n        \"valid\": false\n      }\n    },\n    \"domain\": \"example2.com\",\n    \"id\": 2,\n    \"ips\": [],\n    \"legacy\": false,\n    \"subdomain\": \"new\",\n    \"user_id\": 8,\n    \"username\": \"john@example2.com\",\n    \"valid\": false\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Associate a authenticated domain with a given user.",
      "method": "post",
      "endpoint": "whitelabel/domains/:domain_id/subuser",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"automatic_security\": {{faker 'random.boolean'}},\n  \"custom_spf\": {{faker 'random.boolean'}},\n  \"default\": {{faker 'random.boolean'}},\n  \"dns\": {\n    \"dkim\": {\n      \"data\": \"\",\n      \"host\": \"\",\n      \"type\": \"\",\n      \"valid\": {{faker 'random.boolean'}}\n    },\n    \"domain_spf\": {\n      \"data\": \"\",\n      \"host\": \"\",\n      \"type\": \"\",\n      \"valid\": {{faker 'random.boolean'}}\n    },\n    \"mail_server\": {\n      \"data\": \"\",\n      \"host\": \"\",\n      \"type\": \"\",\n      \"valid\": {{faker 'random.boolean'}}\n    },\n    \"subdomain_spf\": {\n      \"data\": \"\",\n      \"host\": \"\",\n      \"type\": \"\",\n      \"valid\": {{faker 'random.boolean'}}\n    }\n  },\n  \"domain\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"ips\": [\n    \"\"\n  ],\n  \"legacy\": {{faker 'random.boolean'}},\n  \"subdomain\": \"\",\n  \"user_id\": {{faker 'random.number'}},\n  \"username\": \"\",\n  \"valid\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Add an IP to an authenticated domain",
      "method": "post",
      "endpoint": "whitelabel/domains/:id/ips",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"automatic_security\": {{faker 'random.boolean'}},\n  \"custom_spf\": {{faker 'random.boolean'}},\n  \"default\": {{faker 'random.boolean'}},\n  \"dns\": {\n    \"dkim\": {\n      \"data\": \"\",\n      \"host\": \"\",\n      \"type\": \"\",\n      \"valid\": {{faker 'random.boolean'}}\n    },\n    \"domain_spf\": {\n      \"data\": \"\",\n      \"host\": \"\",\n      \"type\": \"\",\n      \"valid\": {{faker 'random.boolean'}}\n    },\n    \"mail_server\": {\n      \"data\": \"\",\n      \"host\": \"\",\n      \"type\": \"\",\n      \"valid\": {{faker 'random.boolean'}}\n    },\n    \"subdomain_spf\": {\n      \"data\": \"\",\n      \"host\": \"\",\n      \"type\": \"\",\n      \"valid\": {{faker 'random.boolean'}}\n    }\n  },\n  \"domain\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"ips\": [\n    \"\"\n  ],\n  \"legacy\": {{faker 'random.boolean'}},\n  \"subdomain\": \"\",\n  \"user_id\": {{faker 'random.number'}},\n  \"username\": \"\",\n  \"valid\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Remove an IP from an authenticated domain.",
      "method": "delete",
      "endpoint": "whitelabel/domains/:id/ips/:ip",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"automatic_security\": {{faker 'random.boolean'}},\n  \"custom_spf\": {{faker 'random.boolean'}},\n  \"default\": {{faker 'random.boolean'}},\n  \"dns\": {\n    \"dkim\": {\n      \"data\": \"\",\n      \"host\": \"\",\n      \"type\": \"\",\n      \"valid\": {{faker 'random.boolean'}}\n    },\n    \"domain_spf\": {\n      \"data\": \"\",\n      \"host\": \"\",\n      \"type\": \"\",\n      \"valid\": {{faker 'random.boolean'}}\n    },\n    \"mail_server\": {\n      \"data\": \"\",\n      \"host\": \"\",\n      \"type\": \"\",\n      \"valid\": {{faker 'random.boolean'}}\n    },\n    \"subdomain_spf\": {\n      \"data\": \"\",\n      \"host\": \"\",\n      \"type\": \"\",\n      \"valid\": {{faker 'random.boolean'}}\n    }\n  },\n  \"domain\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"ips\": [\n    \"\"\n  ],\n  \"legacy\": {{faker 'random.boolean'}},\n  \"subdomain\": \"\",\n  \"user_id\": {{faker 'random.number'}},\n  \"username\": \"\",\n  \"valid\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Validate a domain authentication.",
      "method": "post",
      "endpoint": "whitelabel/domains/:id/validate",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"valid\": {{faker 'random.boolean'}},\n  \"validation_results\": {\n    \"dkim1\": {\n      \"reason\": \"\",\n      \"valid\": {{faker 'random.boolean'}}\n    },\n    \"dkim2\": {\n      \"reason\": \"\",\n      \"valid\": {{faker 'random.boolean'}}\n    },\n    \"mail_cname\": {\n      \"reason\": \"\",\n      \"valid\": {{faker 'random.boolean'}}\n    },\n    \"spf\": {\n      \"reason\": \"\",\n      \"valid\": {{faker 'random.boolean'}}\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve all reverse DNS records",
      "method": "get",
      "endpoint": "whitelabel/ips",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  {\n    \"a_record\": {\n      \"data\": \"192.168.1.1\",\n      \"host\": \"o1.email.example.com\",\n      \"type\": \"a\",\n      \"valid\": true\n    },\n    \"domain\": \"example.com\",\n    \"id\": 1,\n    \"ip\": \"192.168.1.1\",\n    \"legacy\": false,\n    \"rdns\": \"o1.email.example.com\",\n    \"subdomain\": \"email\",\n    \"users\": [\n      {\n        \"user_id\": 7,\n        \"username\": \"john@example.com\"\n      },\n      {\n        \"user_id\": 8,\n        \"username\": \"jane@example.com\"\n      }\n    ],\n    \"valid\": true\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Set up reverse DNS",
      "method": "post",
      "endpoint": "whitelabel/ips",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"a_record\": {\n    \"data\": \"192.168.1.1\",\n    \"host\": \"o1.email.example.com\",\n    \"type\": \"a\",\n    \"valid\": true\n  },\n  \"domain\": \"example.com\",\n  \"id\": 1,\n  \"ip\": \"192.168.1.1\",\n  \"legacy\": false,\n  \"rdns\": \"o1.email.example.com\",\n  \"subdomain\": \"email\",\n  \"users\": [\n    {\n      \"user_id\": 7,\n      \"username\": \"john@example.com\"\n    },\n    {\n      \"user_id\": 8,\n      \"username\": \"jane@example.com\"\n    }\n  ],\n  \"valid\": true\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete a reverse DNS record",
      "method": "delete",
      "endpoint": "whitelabel/ips/:id",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve a reverse DNS record",
      "method": "get",
      "endpoint": "whitelabel/ips/:id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"a_record\": {\n    \"data\": \"192.168.1.1\",\n    \"host\": \"o1.email.example.com\",\n    \"type\": \"a\",\n    \"valid\": true\n  },\n  \"domain\": \"example.com\",\n  \"id\": 1,\n  \"ip\": \"192.168.1.1\",\n  \"legacy\": false,\n  \"rdns\": \"o1.email.example.com\",\n  \"subdomain\": \"email\",\n  \"users\": [\n    {\n      \"user_id\": 7,\n      \"username\": \"john@example.com\"\n    },\n    {\n      \"user_id\": 8,\n      \"username\": \"jane@example.com\"\n    }\n  ],\n  \"valid\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Validate a reverse DNS record",
      "method": "post",
      "endpoint": "whitelabel/ips/:id/validate",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"valid\": \"{{oneOf (array 'true' 'false')}}\",\n  \"validation_results\": {\n    \"a_record\": {\n      \"reason\": \"\",\n      \"valid\": \"{{oneOf (array 'true' 'false')}}\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Unexpected error in API call. See HTTP response body for details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve all branded links",
      "method": "get",
      "endpoint": "whitelabel/links",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  {\n    \"default\": \"{{oneOf (array 'true' 'false')}}\",\n    \"dns\": {\n      \"domain_cname\": {\n        \"data\": \"\",\n        \"host\": \"\",\n        \"type\": \"{{oneOf (array 'cname' 'txt' 'mx')}}\",\n        \"valid\": \"{{oneOf (array 'true' 'false')}}\"\n      },\n      \"owner_cname\": {\n        \"data\": \"\",\n        \"host\": \"\",\n        \"type\": \"{{oneOf (array 'cname' 'txt' 'mx')}}\",\n        \"valid\": \"{{oneOf (array 'true' 'false')}}\"\n      }\n    },\n    \"domain\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"legacy\": \"{{oneOf (array 'true' 'false')}}\",\n    \"subdomain\": \"\",\n    \"user_id\": {{faker 'random.number'}},\n    \"username\": \"\",\n    \"valid\": \"{{oneOf (array 'true' 'false')}}\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Create a branded link",
      "method": "post",
      "endpoint": "whitelabel/links",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"default\": \"{{oneOf (array 'true' 'false')}}\",\n  \"dns\": {\n    \"domain_cname\": {\n      \"data\": \"\",\n      \"host\": \"\",\n      \"type\": \"{{oneOf (array 'cname' 'txt' 'mx')}}\",\n      \"valid\": \"{{oneOf (array 'true' 'false')}}\"\n    },\n    \"owner_cname\": {\n      \"data\": \"\",\n      \"host\": \"\",\n      \"type\": \"{{oneOf (array 'cname' 'txt' 'mx')}}\",\n      \"valid\": \"{{oneOf (array 'true' 'false')}}\"\n    }\n  },\n  \"domain\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"legacy\": \"{{oneOf (array 'true' 'false')}}\",\n  \"subdomain\": \"\",\n  \"user_id\": {{faker 'random.number'}},\n  \"username\": \"\",\n  \"valid\": \"{{oneOf (array 'true' 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve the default branded link",
      "method": "get",
      "endpoint": "whitelabel/links/default",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"default\": \"{{oneOf (array 'true' 'false')}}\",\n  \"dns\": {\n    \"domain_cname\": {\n      \"data\": \"\",\n      \"host\": \"\",\n      \"type\": \"{{oneOf (array 'cname' 'txt' 'mx')}}\",\n      \"valid\": \"{{oneOf (array 'true' 'false')}}\"\n    },\n    \"owner_cname\": {\n      \"data\": \"\",\n      \"host\": \"\",\n      \"type\": \"{{oneOf (array 'cname' 'txt' 'mx')}}\",\n      \"valid\": \"{{oneOf (array 'true' 'false')}}\"\n    }\n  },\n  \"domain\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"legacy\": \"{{oneOf (array 'true' 'false')}}\",\n  \"subdomain\": \"\",\n  \"user_id\": {{faker 'random.number'}},\n  \"username\": \"\",\n  \"valid\": \"{{oneOf (array 'true' 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Disassociate a branded link from a subuser",
      "method": "delete",
      "endpoint": "whitelabel/links/subuser",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve a subuser's branded link",
      "method": "get",
      "endpoint": "whitelabel/links/subuser",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"default\": \"{{oneOf (array 'true' 'false')}}\",\n  \"dns\": {\n    \"domain_cname\": {\n      \"data\": \"\",\n      \"host\": \"\",\n      \"type\": \"{{oneOf (array 'cname' 'txt' 'mx')}}\",\n      \"valid\": \"{{oneOf (array 'true' 'false')}}\"\n    },\n    \"owner_cname\": {\n      \"data\": \"\",\n      \"host\": \"\",\n      \"type\": \"{{oneOf (array 'cname' 'txt' 'mx')}}\",\n      \"valid\": \"{{oneOf (array 'true' 'false')}}\"\n    }\n  },\n  \"domain\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"legacy\": \"{{oneOf (array 'true' 'false')}}\",\n  \"subdomain\": \"\",\n  \"user_id\": {{faker 'random.number'}},\n  \"username\": \"\",\n  \"valid\": \"{{oneOf (array 'true' 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Delete a branded link",
      "method": "delete",
      "endpoint": "whitelabel/links/:id",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Retrieve a branded link",
      "method": "get",
      "endpoint": "whitelabel/links/:id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"default\": \"{{oneOf (array 'true' 'false')}}\",\n  \"dns\": {\n    \"domain_cname\": {\n      \"data\": \"\",\n      \"host\": \"\",\n      \"type\": \"{{oneOf (array 'cname' 'txt' 'mx')}}\",\n      \"valid\": \"{{oneOf (array 'true' 'false')}}\"\n    },\n    \"owner_cname\": {\n      \"data\": \"\",\n      \"host\": \"\",\n      \"type\": \"{{oneOf (array 'cname' 'txt' 'mx')}}\",\n      \"valid\": \"{{oneOf (array 'true' 'false')}}\"\n    }\n  },\n  \"domain\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"legacy\": \"{{oneOf (array 'true' 'false')}}\",\n  \"subdomain\": \"\",\n  \"user_id\": {{faker 'random.number'}},\n  \"username\": \"\",\n  \"valid\": \"{{oneOf (array 'true' 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Update a branded link",
      "method": "patch",
      "endpoint": "whitelabel/links/:id",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"default\": \"{{oneOf (array 'true' 'false')}}\",\n  \"dns\": {\n    \"domain_cname\": {\n      \"data\": \"\",\n      \"host\": \"\",\n      \"type\": \"{{oneOf (array 'cname' 'txt' 'mx')}}\",\n      \"valid\": \"{{oneOf (array 'true' 'false')}}\"\n    },\n    \"owner_cname\": {\n      \"data\": \"\",\n      \"host\": \"\",\n      \"type\": \"{{oneOf (array 'cname' 'txt' 'mx')}}\",\n      \"valid\": \"{{oneOf (array 'true' 'false')}}\"\n    }\n  },\n  \"domain\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"legacy\": \"{{oneOf (array 'true' 'false')}}\",\n  \"subdomain\": \"\",\n  \"user_id\": {{faker 'random.number'}},\n  \"username\": \"\",\n  \"valid\": \"{{oneOf (array 'true' 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Validate a branded link",
      "method": "post",
      "endpoint": "whitelabel/links/:id/validate",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"valid\": \"{{oneOf (array 'true' 'false')}}\",\n  \"validation_results\": {\n    \"domain_cname\": {\n      \"reason\": \"\",\n      \"valid\": \"{{oneOf (array 'true' 'false')}}\"\n    },\n    \"owner_cname\": {\n      \"reason\": \"\",\n      \"valid\": \"{{oneOf (array 'true' 'false')}}\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Associate a branded link with a subuser",
      "method": "post",
      "endpoint": "whitelabel/links/:link_id/subuser",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"default\": \"{{oneOf (array 'true' 'false')}}\",\n  \"dns\": {\n    \"domain_cname\": {\n      \"data\": \"\",\n      \"host\": \"\",\n      \"type\": \"{{oneOf (array 'cname' 'txt' 'mx')}}\",\n      \"valid\": \"{{oneOf (array 'true' 'false')}}\"\n    },\n    \"owner_cname\": {\n      \"data\": \"\",\n      \"host\": \"\",\n      \"type\": \"{{oneOf (array 'cname' 'txt' 'mx')}}\",\n      \"valid\": \"{{oneOf (array 'true' 'false')}}\"\n    }\n  },\n  \"domain\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"legacy\": \"{{oneOf (array 'true' 'false')}}\",\n  \"subdomain\": \"\",\n  \"user_id\": {{faker 'random.number'}},\n  \"username\": \"\",\n  \"valid\": \"{{oneOf (array 'true' 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "https": false,
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}
